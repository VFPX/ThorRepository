*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="peme_snippet_fp.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS fp_form AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="pgfFieldPicker" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.chkFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.cmdFixPrefix" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.txtPrefix" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.txtCursor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.edtReturn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.opgtype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.cmdRemovePrefix" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.opgTarget" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.lblLocalAlias" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.lblInto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.txtFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.lblFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.chkCloseAfter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.cmdcopytoclipboard" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.Container1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.Container1.chknvl" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.Container1.opgCast" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page1.Container1.optLanguage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.grdShowTable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.chkreadonly" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.chkhideunselected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.lblSort" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.cboSort" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.lblFilter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.txtFilter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.cmdModifyStructure" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.cmdAppend" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.cmdBottom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.cmdTop" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.cmdEdit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.opgFilter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.Page2.cmdHelp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.opgCase" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.chkComma" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Spinner1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Check2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Check3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Container1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.cmdBackColor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.cmdForeColor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.lblForeColor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.lblbackcolor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.lblBackColorRGB" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.lblForeColorRGB" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Check4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.cntFormBackColor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.cntFormBackColor.Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.cntFormBackColor.Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.cntFormBackColor.Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Check5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Spinner2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageSettings.Label6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.grdCurindex" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.grdCurindex.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.grdCurindex.Column1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.grdCurindex.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.grdCurindex.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.grdCurindex.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.grdCurindex.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.grdCurindex.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.grdCurindex.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfFieldPicker.PageIndexes.edtIndex" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column1.Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column6.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdPem_fieldpicker.Column7.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdselectall" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdReverse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmddeselectall" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdApply" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblVersion" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboSelectAlias" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRecountCount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklEditFieldNames" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblURL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblContextMenuHelp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTable" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addcustomkeyword
		*m: addfieldcursorrecords
		*m: appendblank
		*m: browsegridheaderclick
		*m: browsegridheadermoved
		*m: browsegridheaderrightclick
		*m: browsegridrightclick
		*m: changeallmarked
		*m: changebackcolor
		*m: changecase
		*m: changecaseoffieldname
		*m: changecaseofstring
		*m: changeforecolor
		*m: changeformbackcolor
		*m: closecursor
		*m: color2rgb
		*m: createaliaslist
		*m: createfieldcursor
		*m: createindexcursor
		*m: createindextext
		*m: csettings_access
		*m: custombindevents
		*m: deletefile
		*m: deselectuninterestingfields
		*m: dockable_assign
		*m: editsinglerecord
		*m: fillindexcursor
		*m: filterhelptext
		*m: getdynamicform
		*m: getemptyvalue
		*m: getfilterforallcharacterfields
		*m: getselectedfieldlist
		*m: goto
		*m: gridpick_after
		*m: gridpick_before
		*m: gridpick_click
		*m: gridpick_init
		*m: gridpick_keypress
		*m: gridtags_init
		*m: isctrldown
		*m: leditfieldnames_assign
		*m: makecaststring
		*m: makefilter
		*m: makeresultstring
		*m: nfontsize_assign
		*m: oresultstring_access
		*m: pickercontextmenu
		*m: picture_access
		*m: restoresettings
		*m: savedata
		*m: savesettings
		*m: searchbyvalue
		*m: selectall
		*m: setalias
		*m: setformbackcolor
		*m: setnormalfilter
		*m: setorderfieldname
		*m: setorderfieldtype
		*m: setordermarked
		*m: setorderrecord
		*m: setreadonly
		*m: setrecordsource
		*m: setsortorder
		*m: shiftmarked
		*m: showhelpforsearchbyvalue
		*m: togglemarked
		*m: unselectall
		*m: updateindexpage
		*m: useisxoptions
		*m: zapme
		*p: calias
		*p: ccurfilter
		*p: ccurindex
		*p: ccursor
		*p: cfilter
		*p: cfilterexpression
		*p: cfilterfields
		*p: cfilterprog
		*p: cindextext
		*p: cprefix
		*p: creturn
		*p: csavefile
		*p: csettings
		*p: ctarget
		*p: ctempfile
		*p: curl
		*p: cversion
		*p: lautosaveselections
		*p: lcheckfornulls
		*p: lcloseafter
		*p: lcommafirst
		*p: leditfieldnames
		*p: lfilterbyvalueusesand
		*p: lfrom
		*p: lhandledblclick
		*p: lhideunselected
		*p: lneedrefresh
		*p: lnondefaultbackcolor
		*p: lreadonly
		*p: lreadonlyatstartup
		*p: lreordercolumns
		*p: lselectallatstartup
		*p: lsetfocustogrid
		*p: lstartwithgrid
		*p: lsuperbrowse
		*p: ltoomanyfilterfields
		*p: lusenvl
		*p: nbeautifycaseoption
		*p: ncaseselection
		*p: ncasttype
		*p: ncursor
		*p: ndockable
		*p: nfilter
		*p: nfontsize
		*p: nlanguage
		*p: nmemofieldwidth
		*p: nnondefaultbackcolor
		*p: npopupformeditboxheight
		*p: npopupformeditboxwidth
		*p: nreturntype
		*p: nselectedbackcolor
		*p: nselectedforecolor
		*p: nstartpage
		*p: obeautifyoptions
		*p: ogrdshowtable
		*p: oresultstring
		*a: aused[1,0]
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	*<PropValue>
		AllowOutput = .F.
		calias = 
		Caption = "Form1"
		ccurfilter = 
		ccurindex = 
		ccursor = 
		cfilter = 
		cfilterexpression = 
		cfilterfields = 
		cfilterprog = 
		cindextext = 
		cprefix = 
		creturn = 
		csavefile = 
		csettings = 
		ctarget = 
		ctempfile = 
		curl = 
		cversion = 1.5.0                                                
		Dockable = 0
		DoCreate = .T.
		Height = 421
		lautosaveselections = .F.
		lcheckfornulls = .F.
		lcloseafter = .F.
		lcommafirst = .F.
		leditfieldnames = .F.
		Left = 0
		lfilterbyvalueusesand = .T.
		lfrom = .T.
		lhandledblclick = .T.
		lhideunselected = .F.
		lneedrefresh = .F.
		lnondefaultbackcolor = .F.
		lreadonly = .T.
		lreadonlyatstartup = .T.
		lreordercolumns = .T.
		lselectallatstartup = .F.
		lsetfocustogrid = .T.
		lstartwithgrid = .T.
		lsuperbrowse = .F.
		ltoomanyfilterfields = .F.
		lusenvl = .F.
		MinHeight = 300
		MinWidth = 480
		Name = "fp_form"
		nbeautifycaseoption = 1
		ncaseselection = 1
		ncasttype = 1
		ncursor = 1
		ndockable = 1
		nfilter = 2
		nfontsize = 9
		nlanguage = 1
		nmemofieldwidth = 0
		nnondefaultbackcolor = ( Thisform.BackColor)
		npopupformeditboxheight = 400
		npopupformeditboxwidth = 800
		nreturntype = 1
		nselectedbackcolor = 12648384
		nselectedforecolor = 0
		nstartpage = 1
		obeautifyoptions = 
		ogrdshowtable = .NULL.
		oresultstring = .NULL.
		ShowTips = .T.
		Top = 0
		Visible = .F.
		Width = 900
		WindowType = 1
		_memberdata = <VFPData>
			<memberdata name="nfontsize_assign" display="nfontsize_Assign"/>
			<memberdata name="restoresettings" display="RestoreSettings"/>
			<memberdata name="lreadonlyatstartup" display="lReadOnlyAtStartup"/>
			<memberdata name="lcloseafter" display="lCloseAfter"/>
			<memberdata name="setalias" display="SetAlias"/>
			<memberdata name="aused" display="aUsed"/>
			<memberdata name="lsuperbrowse" display="lSuperBrowse"/>
			<memberdata name="csavefile" display="cSavefile"/>
			<memberdata name="lautosaveselections" display="lAutoSaveSelections"/>
			<memberdata name="lnondefaultbackcolor" display="lNonDefaultBackColor"/>
			<memberdata name="nnondefaultbackcolor" display="nNonDefaultBackColor"/>
			<memberdata name="setformbackcolor" display="SetFormBackColor"/>
			<memberdata name="ndockable" display="nDockable"/>
			<memberdata name="dockable" display="Dockable"/>
			<memberdata name="dockable_assign" display="Dockable_Assign"/>
			<memberdata name="showhelpforsearchbyvalue" display="ShowHelpForSearchByValue"/>
			<memberdata name="setnormalfilter" display="SetNormalFilter"/>
			<memberdata name="searchbyvalue" display="SearchByValue"/>
			<memberdata name="editsinglerecord" display="EditSingleRecord"/>
			<memberdata name="getdynamicform" display="GetDynamicForm"/>
			<memberdata name="getselectedfieldlist" display="GetSelectedFieldList"/>
			<memberdata name="isctrldown" display="IsCtrlDown"/>
			<memberdata name="appendblank" display="AppendBlank"/>
			<memberdata name="zapme" display="ZapMe"/>
			<memberdata name="browsegridheaderclick" display="BrowseGridHeaderClick"/>
			<memberdata name="browsegridheaderrightclick" display="BrowseGridHeaderRightClick"/>
			<memberdata name="oresultstring" display="oResultString"/>
			<memberdata name="obeautifyoptions" display="oBeautifyOptions"/>
			<memberdata name="addcustomkeyword" display="AddCustomKeyword"/>
			<memberdata name="leditfieldnames" display="lEditFieldNames"/>
			<memberdata name="leditfieldnames_assign" display="lEditFieldNames_Assign"/>
			<memberdata name="goto" display="GoTo"/>
			<memberdata name="cfilterexpression" display="cFilterExpression"/>
			<memberdata name="closecursor" display="CloseCursor"/>
			<memberdata name="lreordercolumns" display="lReorderColumns"/>
			<memberdata name="browsegridheadermoved" display="BrowseGridHeaderMoved"/>
			<memberdata name="setsortorder" display="SetSortOrder"/>
			<memberdata name="oresultstring_access" display="oResultString_Access"/>
			<memberdata name="pickercontextmenu" display="PickerContextMenu"/>
			<memberdata name="deselectuninterestingfields" display="DeSelectUninterestingFields"/>
			<memberdata name="changeallmarked" display="ChangeAllMarked"/>
			<memberdata name="lsetfocustogrid" display="lSetFocusToGrid"/>
			<memberdata name="browsegridrightclick" display="BrowseGridRightClick"/>
			<memberdata name="lfilterbyvalueusesand" display="lFilterByValueUsesAnd"/>
			<memberdata name="getfilterforallcharacterfields" display="GetFilterForAllCharacterFields"/>
			<memberdata name="nmemofieldwidth" display="nMemoFieldWidth"/>
			<memberdata name="npopupformeditboxwidth" display="nPopupFormEditboxWidth"/>
			<memberdata name="npopupformeditboxheight" display="nPopupFormEditboxHeight"/>
			<memberdata name="csettings" display="cSettings"/>
			<memberdata name="csettings_access" display="cSettings_Access"/>
			<memberdata name="savesettings" display="SaveSettings"/>
			<memberdata name="lcheckfornulls" display="lCheckForNulls"/>
			<memberdata name="lhandledblclick" display="lHandleDblClick"/>
			<memberdata name="filterhelptext" display="FilterHelpText"/>
			<memberdata name="custombindevents" display="CustomBindEvents"/>
			<memberdata name="cversion" display="cVersion"/>
			<memberdata name="curl" display="cURL"/>
			<memberdata name="useisxoptions" display="UseISXOptions"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'cboSelectAlias' AS combobox WITH ;
		Anchor = 0, ;
		ControlSource = "", ;
		DisplayCount = 20, ;
		Height = 24, ;
		Left = 573, ;
		Name = "cboSelectAlias", ;
		RowSource = "Thisform.aUsed", ;
		RowSourceType = 5, ;
		TabIndex = 12, ;
		Top = 6, ;
		Width = 229
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'chklEditFieldNames' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 4, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Allow editing of field names", ;
		ControlSource = "Thisform.lEditFieldNames", ;
		Height = 17, ;
		Left = 28, ;
		Name = "chklEditFieldNames", ;
		TabIndex = 4, ;
		ToolTipText = 'This is NOT the same as Modify Structure. This allows you to change the case of the field name ("BasePrice" instead of "Baseprice", .e.g.) for use in Super Browse and IntellisenseX.', ;
		Top = 345, ;
		Value = .F., ;
		Width = 168
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdApply' AS commandbutton WITH ;
		Anchor = 8, ;
		Caption = "Apply", ;
		Height = 24, ;
		Left = 843, ;
		Name = "cmdApply", ;
		TabIndex = 8, ;
		Top = 6, ;
		Width = 51, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmddeselectall' AS commandbutton WITH ;
		AutoSize = .F., ;
		Caption = "\<Unselect all", ;
		Height = 27, ;
		Left = 109, ;
		Name = "cmddeselectall", ;
		TabIndex = 7, ;
		TabStop = .F., ;
		Top = 6, ;
		Width = 83
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS commandbutton WITH ;
		Anchor = 0, ;
		AutoSize = .F., ;
		Cancel = .T., ;
		Caption = "Exit", ;
		Height = 27, ;
		Left = 216, ;
		Name = "cmdExit", ;
		TabIndex = 15, ;
		ToolTipText = "Save the current list of fields selection from this table (for use next time).", ;
		Top = 336, ;
		Visible = .F., ;
		Width = 66
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdReverse' AS commandbutton WITH ;
		AutoSize = .F., ;
		Caption = "\<Reverse all", ;
		Height = 27, ;
		Left = 218, ;
		Name = "cmdReverse", ;
		TabIndex = 6, ;
		TabStop = .F., ;
		Top = 6, ;
		Width = 81, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS commandbutton WITH ;
		Anchor = 4, ;
		AutoSize = .F., ;
		Caption = "Save Selecti\<ons", ;
		Height = 27, ;
		Left = 24, ;
		Name = "cmdSave", ;
		TabIndex = 3, ;
		ToolTipText = "Save the current list of fields selection from this table (for use next time).", ;
		Top = 381, ;
		Width = 120
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdselectall' AS commandbutton WITH ;
		AutoSize = .F., ;
		Caption = "Select \<All", ;
		Height = 27, ;
		Left = 17, ;
		Name = "cmdselectall", ;
		TabIndex = 5, ;
		TabStop = .F., ;
		Top = 6, ;
		Width = 68
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Anchor = 4, ;
		AutoSize = .F., ;
		Caption = "Show Schema", ;
		Height = 27, ;
		Left = 162, ;
		Name = "Command2", ;
		TabIndex = 10, ;
		ToolTipText = "", ;
		Top = 381, ;
		Width = 120
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'grdPem_fieldpicker' AS grid WITH ;
		AllowAutoColumnFit = 2, ;
		AllowCellSelection = .F., ;
		AllowRowSizing = .F., ;
		Anchor = 7, ;
		ColumnCount = 7, ;
		DeleteMark = .F., ;
		GridLineColor = 192,192,192, ;
		Height = 309, ;
		Left = 6, ;
		Name = "grdPem_fieldpicker", ;
		Panel = 1, ;
		RecordSourceType = 1, ;
		ScrollBars = 2, ;
		TabIndex = 2, ;
		TabStop = .T., ;
		Top = 33, ;
		Width = 304, ;
		Column1.Alignment = 2, ;
		Column1.ControlSource = "", ;
		Column1.Name = "Column1", ;
		Column1.Sparse = .F., ;
		Column1.Width = 19, ;
		Column2.ControlSource = "", ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 27, ;
		Column3.ControlSource = "", ;
		Column3.Name = "Column3", ;
		Column3.Width = 142, ;
		Column4.Alignment = 2, ;
		Column4.ControlSource = "", ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column4.Width = 27, ;
		Column5.Alignment = 2, ;
		Column5.ControlSource = "", ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .T., ;
		Column5.Width = 27, ;
		Column6.Alignment = 2, ;
		Column6.ControlSource = "", ;
		Column6.Format = "z", ;
		Column6.Name = "Column6", ;
		Column6.ReadOnly = .T., ;
		Column6.Width = 26, ;
		Column7.Alignment = 1, ;
		Column7.ControlSource = "", ;
		Column7.Name = "Column7"
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'grdPem_fieldpicker.Column1.Check1' AS checkbox WITH ;
		Alignment = 2, ;
		Caption = "", ;
		Centered = .T., ;
		Height = 17, ;
		Left = 27, ;
		Name = "Check1", ;
		Top = 26, ;
		Width = 60
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'grdPem_fieldpicker.Column1.Header1' AS header WITH ;
		Caption = " ", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPem_fieldpicker.Column2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "#", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPem_fieldpicker.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdPem_fieldpicker.Column3.Header1' AS header WITH ;
		Caption = "Field name", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPem_fieldpicker.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdPem_fieldpicker.Column4.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Type", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPem_fieldpicker.Column4.Text1' AS textbox WITH ;
		Alignment = 2, ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdPem_fieldpicker.Column5.Header1' AS header WITH ;
		Caption = "Len", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPem_fieldpicker.Column5.Text1' AS textbox WITH ;
		Alignment = 2, ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdPem_fieldpicker.Column6.Header1' AS header WITH ;
		Caption = "Dec", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPem_fieldpicker.Column6.Text1' AS textbox WITH ;
		Alignment = 2, ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdPem_fieldpicker.Column7.Header1' AS header WITH ;
		Caption = "fieldtype", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdPem_fieldpicker.Column7.Text1' AS textbox WITH ;
		Alignment = 1, ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'lblContextMenuHelp' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Use right-click context menu in the grid.", ;
		FontSize = 10, ;
		Height = 18, ;
		Left = 808, ;
		Name = "lblContextMenuHelp", ;
		TabIndex = 16, ;
		Top = 14, ;
		Width = 233
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblRecountCount' AS label WITH ;
		Anchor = 4, ;
		BackStyle = 0, ;
		Caption = "Record Count and Size:", ;
		Height = 17, ;
		Left = 26, ;
		Name = "lblRecountCount", ;
		TabIndex = 13, ;
		Top = 363, ;
		Width = 276
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblTable' AS label WITH ;
		Caption = "Sour\<ce:", ;
		Height = 17, ;
		Left = 529, ;
		Name = "lblTable", ;
		TabIndex = 11, ;
		Top = 11, ;
		Width = 44
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblURL' AS label WITH ;
		Anchor = 4, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Home Page", ;
		FontSize = 7, ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Height = 14, ;
		Left = 207, ;
		Name = "lblURL", ;
		TabIndex = 14, ;
		Top = 408, ;
		Width = 51
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblVersion' AS label WITH ;
		Alignment = 1, ;
		Anchor = 4, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Super Browse -version- (Tore Bleken)", ;
		FontSize = 7, ;
		Height = 14, ;
		Left = 42, ;
		Name = "lblVersion", ;
		TabIndex = 9, ;
		Top = 408, ;
		Width = 157
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker' AS pageframe WITH ;
		Anchor = 15, ;
		ErasePage = .T., ;
		Height = 407, ;
		Left = 322, ;
		Name = "pgfFieldPicker", ;
		PageCount = 4, ;
		TabIndex = 1, ;
		TabStyle = 1, ;
		Top = 7, ;
		Width = 575, ;
		Page1.Caption = "Pic\<ker", ;
		Page1.Name = "Page1", ;
		Page1.PageOrder = 2, ;
		Page2.Caption = "\<Grid", ;
		Page2.Name = "Page2", ;
		Page2.PageOrder = 1, ;
		Page3.Caption = "Settings", ;
		Page3.Name = "PageSettings", ;
		Page3.PageOrder = 4, ;
		Page4.Caption = "Inde\<xes", ;
		Page4.Name = "PageIndexes", ;
		Page4.PageOrder = 3
		*< END OBJECT: BaseClass="pageframe" />

	ADD OBJECT 'pgfFieldPicker.Page1.chkCloseAfter' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 4, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Close afterwards", ;
		ControlSource = "Thisform.lCloseAfter", ;
		Height = 17, ;
		Left = 370, ;
		Name = "chkCloseAfter", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 286, ;
		Value = .F., ;
		Width = 124
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.Page1.chkFrom' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 4, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Add \<From", ;
		ControlSource = "Thisform.lFrom", ;
		Height = 17, ;
		Left = 267, ;
		Name = "chkFrom", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 286, ;
		Value = .F., ;
		Width = 96
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.Page1.cmdcopytoclipboard' AS commandbutton WITH ;
		Anchor = 8, ;
		AutoSize = .F., ;
		Caption = "Copy to clip\<board", ;
		Height = 27, ;
		Left = 453, ;
		Name = "cmdcopytoclipboard", ;
		Top = 6, ;
		Width = 109, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.Page1.cmdFixPrefix' AS commandbutton WITH ;
		Anchor = 4, ;
		AutoSize = .T., ;
		Caption = " = Table Name", ;
		Height = 27, ;
		Left = 264, ;
		Name = "cmdFixPrefix", ;
		TabIndex = 3, ;
		Top = 312, ;
		Width = 99
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.Page1.cmdRemovePrefix' AS commandbutton WITH ;
		Anchor = 4, ;
		AutoSize = .F., ;
		Caption = "Re\<move ", ;
		Height = 27, ;
		Left = 377, ;
		Name = "cmdRemovePrefix", ;
		TabIndex = 11, ;
		Top = 312, ;
		Width = 67, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.Page1.Container1' AS container WITH ;
		Anchor = 8, ;
		BackStyle = 0, ;
		BorderWidth = 0, ;
		Height = 128, ;
		Left = 445, ;
		Name = "Container1", ;
		Top = 156, ;
		Width = 125
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'pgfFieldPicker.Page1.Container1.chknvl' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 9, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Add NV\<L()", ;
		ControlSource = "Thisform.lUseNVL", ;
		Height = 17, ;
		Left = 14, ;
		Name = "chknvl", ;
		TabIndex = 1, ;
		TabStop = .F., ;
		Top = 43, ;
		Value = .F., ;
		Width = 96
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.Page1.Container1.opgCast' AS optiongroup WITH ;
		Anchor = 9, ;
		BackStyle = 0, ;
		ButtonCount = 3, ;
		ControlSource = "thisform.ncasttype", ;
		Height = 60, ;
		Left = 8, ;
		Name = "opgCast", ;
		TabIndex = 10, ;
		Top = 62, ;
		Value = 1, ;
		Width = 109, ;
		Option1.AutoSize = .F., ;
		Option1.BackStyle = 0, ;
		Option1.Caption = "No Cas\<t", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.TabStop = .F., ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 63, ;
		Option2.AutoSize = .F., ;
		Option2.BackStyle = 0, ;
		Option2.Caption = "\<VFP Cast", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.TabStop = .F., ;
		Option2.Top = 23, ;
		Option2.Width = 69, ;
		Option3.AutoSize = .F., ;
		Option3.BackStyle = 0, ;
		Option3.Caption = "A\<NSI Cast", ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.TabStop = .F., ;
		Option3.Top = 41, ;
		Option3.Width = 74
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'pgfFieldPicker.Page1.Container1.optLanguage' AS optiongroup WITH ;
		Anchor = 9, ;
		BackStyle = 0, ;
		ButtonCount = 2, ;
		ControlSource = "thisform.nlanguage", ;
		Height = 40, ;
		Left = 8, ;
		Name = "optLanguage", ;
		TabIndex = 13, ;
		Top = 0, ;
		Value = 1, ;
		Width = 109, ;
		Option1.AutoSize = .T., ;
		Option1.BackStyle = 0, ;
		Option1.Caption = "VFP", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 3, ;
		Option1.Value = 1, ;
		Option1.Width = 40, ;
		Option2.AutoSize = .T., ;
		Option2.BackStyle = 0, ;
		Option2.Caption = "SQLExec", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 21, ;
		Option2.Width = 68
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'pgfFieldPicker.Page1.edtReturn' AS editbox WITH ;
		Anchor = 15, ;
		FontBold = .F., ;
		FontItalic = .F., ;
		FontName = "Courier New", ;
		FontSize = 9, ;
		Height = 270, ;
		Left = 11, ;
		Name = "edtReturn", ;
		ReadOnly = .T., ;
		TabIndex = 8, ;
		TabStop = .F., ;
		Top = 6, ;
		Width = 432
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'pgfFieldPicker.Page1.lblFrom' AS label WITH ;
		Alignment = 1, ;
		Anchor = 4, ;
		BackStyle = 0, ;
		Caption = "From:", ;
		Height = 17, ;
		Left = 23, ;
		Name = "lblFrom", ;
		TabIndex = 4, ;
		Top = 287, ;
		Width = 64
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.Page1.lblInto' AS label WITH ;
		Alignment = 1, ;
		Anchor = 4, ;
		BackStyle = 0, ;
		Caption = "Into Cursor\<:", ;
		Height = 17, ;
		Left = 0, ;
		Name = "lblInto", ;
		TabIndex = 6, ;
		Top = 347, ;
		Width = 87
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.Page1.lblLocalAlias' AS label WITH ;
		Alignment = 1, ;
		Anchor = 4, ;
		BackStyle = 0, ;
		Caption = "Local Alias:", ;
		Height = 17, ;
		Left = 23, ;
		Name = "lblLocalAlias", ;
		TabIndex = 4, ;
		Top = 317, ;
		Width = 64
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.Page1.opgTarget' AS optiongroup WITH ;
		Anchor = 4, ;
		BackStyle = 0, ;
		ButtonCount = 3, ;
		ControlSource = "thisform.ncursor", ;
		Height = 27, ;
		Left = 261, ;
		Name = "opgTarget", ;
		TabIndex = 12, ;
		Top = 343, ;
		Value = 1, ;
		Width = 296, ;
		Option1.BackStyle = 0, ;
		Option1.Caption = "\<1. Table", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Style = 0, ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 62, ;
		Option2.BackStyle = 0, ;
		Option2.Caption = "\<2. Cursor", ;
		Option2.Height = 17, ;
		Option2.Left = 82, ;
		Option2.Name = "Option2", ;
		Option2.Style = 0, ;
		Option2.Top = 5, ;
		Option2.Width = 69, ;
		Option3.BackStyle = 0, ;
		Option3.Caption = "\<3. Cursor ReadWrite", ;
		Option3.Height = 17, ;
		Option3.Left = 159, ;
		Option3.Name = "Option3", ;
		Option3.Style = 0, ;
		Option3.Top = 5, ;
		Option3.Width = 130
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'pgfFieldPicker.Page1.opgtype' AS optiongroup WITH ;
		Anchor = 9, ;
		BackStyle = 0, ;
		ButtonCount = 6, ;
		ControlSource = "Thisform.nReturnType", ;
		Height = 118, ;
		Left = 453, ;
		Name = "opgtype", ;
		TabIndex = 9, ;
		Top = 36, ;
		Width = 109, ;
		Option1.AutoSize = .F., ;
		Option1.BackStyle = 0, ;
		Option1.Caption = "Onl\<y fields", ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.TabStop = .F., ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 75, ;
		Option2.AutoSize = .F., ;
		Option2.BackStyle = 0, ;
		Option2.Caption = "S\<elect ....", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.TabStop = .F., ;
		Option2.Top = 23, ;
		Option2.Width = 67, ;
		Option3.AutoSize = .F., ;
		Option3.BackStyle = 0, ;
		Option3.Caption = "U\<pdate ....", ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.TabStop = .F., ;
		Option3.Top = 41, ;
		Option3.Width = 64, ;
		Option4.AutoSize = .F., ;
		Option4.BackStyle = 0, ;
		Option4.Caption = "\<Insert ....", ;
		Option4.Height = 17, ;
		Option4.Left = 5, ;
		Option4.Name = "Option4", ;
		Option4.Top = 60, ;
		Option4.Width = 73, ;
		Option5.AutoSize = .F., ;
		Option5.BackStyle = 0, ;
		Option5.Caption = "\<Create ....", ;
		Option5.Height = 17, ;
		Option5.Left = 5, ;
		Option5.Name = "Option5", ;
		Option5.Top = 79, ;
		Option5.Width = 70, ;
		Option6.AutoSize = .F., ;
		Option6.BackStyle = 0, ;
		Option6.Caption = "Bro\<wse", ;
		Option6.Height = 17, ;
		Option6.Left = 5, ;
		Option6.Name = "Option6", ;
		Option6.Top = 98, ;
		Option6.Width = 60
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'pgfFieldPicker.Page1.txtCursor' AS textbox WITH ;
		Anchor = 4, ;
		ControlSource = "thisform.ctarget", ;
		Height = 25, ;
		Left = 97, ;
		Name = "txtCursor", ;
		TabIndex = 7, ;
		TabStop = .F., ;
		Top = 343, ;
		Width = 154
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfFieldPicker.Page1.txtFrom' AS textbox WITH ;
		Anchor = 4, ;
		ControlSource = "", ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Height = 25, ;
		Left = 97, ;
		Name = "txtFrom", ;
		TabIndex = 5, ;
		TabStop = .F., ;
		Top = 283, ;
		Width = 153
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfFieldPicker.Page1.txtPrefix' AS textbox WITH ;
		Anchor = 4, ;
		ControlSource = "thisform.cprefix", ;
		Height = 25, ;
		Left = 97, ;
		Name = "txtPrefix", ;
		TabIndex = 5, ;
		TabStop = .F., ;
		Top = 313, ;
		Width = 153
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfFieldPicker.Page2.cboSort' AS combobox WITH ;
		DisplayCount = 20, ;
		Height = 24, ;
		Left = 47, ;
		Name = "cboSort", ;
		TabIndex = 2, ;
		Top = 5, ;
		Width = 106
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'pgfFieldPicker.Page2.chkhideunselected' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "\<Hide unselected Fields", ;
		ControlSource = "thisform.lHideUnselected", ;
		Height = 17, ;
		Left = 285, ;
		Name = "chkhideunselected", ;
		TabIndex = 7, ;
		Top = 355, ;
		Width = 145
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.Page2.chkreadonly' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 6, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "\<Read-Only", ;
		ControlSource = "thisform.lreadonly", ;
		Height = 17, ;
		Left = 194, ;
		Name = "chkreadonly", ;
		TabIndex = 6, ;
		Top = 355, ;
		Width = 76
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.Page2.cmdAppend' AS commandbutton WITH ;
		Anchor = 4, ;
		AutoSize = .F., ;
		Caption = "Append", ;
		DisabledPicture = 16_200-add_gray.gif, ;
		Height = 27, ;
		Left = 71, ;
		Name = "cmdAppend", ;
		Picture = 16_200-add.gif, ;
		PicturePosition = 14, ;
		TabIndex = 9, ;
		ToolTipText = "Append Blank; Ctrl+C to append copy of current record", ;
		Top = 349, ;
		Width = 21
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.Page2.cmdBottom' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "Bottom", ;
		Height = 27, ;
		Left = 43, ;
		Name = "cmdBottom", ;
		Picture = vcr_bottom.bmp, ;
		PicturePosition = 14, ;
		TabIndex = 10, ;
		ToolTipText = "Last Record", ;
		Top = 349, ;
		Width = 21
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.Page2.cmdEdit' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "Edit", ;
		DisabledPicture = 16_008-doc_edit_gray.gif, ;
		Height = 27, ;
		Left = 99, ;
		Name = "cmdEdit", ;
		Picture = 16_008-doc_edit.gif, ;
		PicturePosition = 14, ;
		TabIndex = 12, ;
		ToolTipText = "Edit Data", ;
		Top = 349, ;
		Width = 21
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.Page2.cmdHelp' AS commandbutton WITH ;
		Anchor = 8, ;
		Caption = "?", ;
		FontBold = .T., ;
		FontSize = 10, ;
		Height = 21, ;
		Left = 543, ;
		Name = "cmdHelp", ;
		ToolTipText = "Help", ;
		Top = 5, ;
		Width = 20
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.Page2.cmdModifyStructure' AS commandbutton WITH ;
		Anchor = 12, ;
		AutoSize = .T., ;
		Caption = "Modify Structure", ;
		Height = 27, ;
		Left = 458, ;
		Name = "cmdModifyStructure", ;
		TabIndex = 8, ;
		Top = 349, ;
		Width = 104
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.Page2.cmdTop' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "Top", ;
		Height = 27, ;
		Left = 15, ;
		Name = "cmdTop", ;
		Picture = vcr_top.bmp, ;
		PicturePosition = 14, ;
		TabIndex = 11, ;
		ToolTipText = "First Record", ;
		Top = 349, ;
		Width = 21
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.Page2.grdShowTable' AS grid WITH ;
		AllowCellSelection = (!thisform.lreadonly), ;
		Anchor = 15, ;
		GridLineColor = 192,192,192, ;
		Height = 313, ;
		Left = 7, ;
		Name = "grdShowTable", ;
		ReadOnly = (thisform.lreadonly), ;
		TabIndex = 5, ;
		Top = 33, ;
		Width = 557
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'pgfFieldPicker.Page2.lblFilter' AS label WITH ;
		Alignment = 1, ;
		BackStyle = 0, ;
		Caption = "Find Va\<lues:", ;
		Height = 17, ;
		Left = 164, ;
		Name = "lblFilter", ;
		TabIndex = 3, ;
		Top = 9, ;
		Width = 69
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.Page2.lblSort' AS label WITH ;
		BackStyle = 0, ;
		Caption = "\<Sort:", ;
		Height = 17, ;
		Left = 10, ;
		Name = "lblSort", ;
		TabIndex = 1, ;
		Top = 9, ;
		Width = 40
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.Page2.opgFilter' AS optiongroup WITH ;
		Anchor = 8, ;
		BackStyle = 0, ;
		ButtonCount = 2, ;
		ControlSource = "thisform.nfilter", ;
		Height = 27, ;
		Left = 389, ;
		Name = "opgFilter", ;
		TabIndex = 13, ;
		Top = 3, ;
		Value = 1, ;
		Visible = .T., ;
		Width = 148, ;
		Option1.AutoSize = .F., ;
		Option1.BackStyle = 0, ;
		Option1.Caption = "\<Value", ;
		Option1.Height = 17, ;
		Option1.Left = 95, ;
		Option1.Name = "Option1", ;
		Option1.Style = 0, ;
		Option1.ToolTipText = "Click to show help.", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 80, ;
		Option2.AutoSize = .F., ;
		Option2.BackStyle = 0, ;
		Option2.Caption = "\<Expression", ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Style = 0, ;
		Option2.Top = 5, ;
		Option2.Width = 80
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'pgfFieldPicker.Page2.txtFilter' AS textbox WITH ;
		Anchor = 11, ;
		ControlSource = "thisform.cfilter", ;
		Height = 23, ;
		Left = 238, ;
		Name = "txtFilter", ;
		TabIndex = 4, ;
		Top = 5, ;
		Width = 139
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.edtIndex' AS editbox WITH ;
		Anchor = 30, ;
		Height = 121, ;
		Left = 3, ;
		Name = "edtIndex", ;
		Top = 254, ;
		Width = 569
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.grdCurindex' AS grid WITH ;
		Anchor = 75, ;
		ColumnCount = 4, ;
		DeleteMark = .F., ;
		Height = 242, ;
		Left = 3, ;
		Name = "grdCurindex", ;
		Panel = 1, ;
		ReadOnly = .T., ;
		RecordSource = "curindex", ;
		RecordSourceType = 1, ;
		Top = 6, ;
		Width = 569, ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 84, ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 310, ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 59, ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T.
		*< END OBJECT: BaseClass="grid" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.grdCurindex.Column1.Header1' AS header WITH ;
		Caption = "Tag name", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.grdCurindex.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.grdCurindex.Column2.Header1' AS header WITH ;
		Caption = "Expression", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.grdCurindex.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.grdCurindex.Column3.Header1' AS header WITH ;
		Caption = "Type", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.grdCurindex.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.grdCurindex.Column4.Header1' AS header WITH ;
		Caption = "Direction", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'pgfFieldPicker.PageIndexes.grdCurindex.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Check1' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Select all fields", ;
		ControlSource = "Thisform.lSelectAllAtStartup", ;
		Height = 17, ;
		Left = 61, ;
		Name = "Check1", ;
		TabStop = .F., ;
		Top = 89, ;
		Value = .F., ;
		Width = 192, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Check2' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Grid is read-only", ;
		ControlSource = "Thisform.lReadOnlyAtStartup", ;
		Height = 17, ;
		Left = 61, ;
		Name = "Check2", ;
		TabStop = .F., ;
		Top = 41, ;
		Value = .F., ;
		Width = 178
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Check3' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Auto-save selections", ;
		ControlSource = "Thisform.lAutoSaveSelections", ;
		Height = 17, ;
		Left = 37, ;
		Name = "Check3", ;
		TabStop = .F., ;
		Top = 123, ;
		Value = .F., ;
		Width = 192, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Check4' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Non-default BackColor for form", ;
		ControlSource = "Thisform.lNonDefaultBackColor", ;
		Height = 17, ;
		Left = 25, ;
		Name = "Check4", ;
		TabStop = .F., ;
		Top = 281, ;
		Value = .F., ;
		Width = 194
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Check5' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "Set focus to grid", ;
		ControlSource = "Thisform.lSetFocusToGrid", ;
		Height = 17, ;
		Left = 61, ;
		Name = "Check5", ;
		TabStop = .F., ;
		Top = 65, ;
		Value = .F., ;
		Width = 192, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.chkComma' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 0, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Place commas which separate fields at the beginning of the line", ;
		ControlSource = "Thisform.lCommaFirst", ;
		Height = 17, ;
		Left = 37, ;
		Name = "chkComma", ;
		TabStop = .F., ;
		Top = 147, ;
		Value = .F., ;
		Width = 368, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.cmdBackColor' AS commandbutton WITH ;
		Anchor = 0, ;
		BackColor = (thisform.nselectedbackcolor), ;
		Caption = "", ;
		Height = 24, ;
		Left = 19, ;
		Name = "cmdBackColor", ;
		Themes = .F., ;
		Top = 312, ;
		Width = 36
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.cmdForeColor' AS commandbutton WITH ;
		Anchor = 0, ;
		BackColor = (thisform.nselectedforecolor), ;
		Caption = "", ;
		Height = 24, ;
		Left = 19, ;
		Name = "cmdForeColor", ;
		Themes = .F., ;
		Top = 346, ;
		Width = 36
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.cntFormBackColor' AS container WITH ;
		BackStyle = 0, ;
		BorderWidth = 0, ;
		Height = 32, ;
		Left = 225, ;
		Name = "cntFormBackColor", ;
		Top = 273, ;
		Width = 314
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.cntFormBackColor.Command1' AS commandbutton WITH ;
		Anchor = 0, ;
		BackColor = (thisform.nNonDefaultBackColor), ;
		Caption = "", ;
		Height = 24, ;
		Left = 10, ;
		Name = "Command1", ;
		Themes = .F., ;
		Top = 6, ;
		Width = 36
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.cntFormBackColor.Label4' AS label WITH ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "BackColor for Form", ;
		Height = 17, ;
		Left = 56, ;
		Name = "Label4", ;
		Top = 10, ;
		Width = 108
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.cntFormBackColor.Label5' AS label WITH ;
		Anchor = 0, ;
		BackStyle = 0, ;
		Caption = "Label1", ;
		Height = 17, ;
		Left = 180, ;
		Name = "Label5", ;
		Top = 10, ;
		Width = 145
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Container1' AS container WITH ;
		BackStyle = 0, ;
		Height = 110, ;
		Left = 1, ;
		Name = "Container1", ;
		Top = 268, ;
		Width = 570
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Label1' AS label WITH ;
		Alignment = 1, ;
		BackStyle = 0, ;
		Caption = "Font size for grids:", ;
		Height = 17, ;
		Left = 31, ;
		Name = "Label1", ;
		Top = 181, ;
		Width = 118
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Label2' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Handling of case for field names:", ;
		Height = 17, ;
		Left = 46, ;
		Name = "Label2", ;
		Top = 211, ;
		Width = 184
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Label3' AS label WITH ;
		Alignment = 1, ;
		BackStyle = 0, ;
		Caption = "At Startup", ;
		FontBold = .T., ;
		Height = 17, ;
		Left = 19, ;
		Name = "Label3", ;
		Top = 19, ;
		Width = 70
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Label4' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Super Browse home page", ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Height = 17, ;
		Left = 415, ;
		Name = "Label4", ;
		Top = 7, ;
		Width = 146
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Label5' AS label WITH ;
		Alignment = 1, ;
		BackStyle = 0, ;
		Caption = "# characters for memo fields", ;
		Height = 17, ;
		Left = 215, ;
		Name = "Label5", ;
		Top = 181, ;
		Width = 167
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Label6' AS label WITH ;
		Alignment = 0, ;
		BackStyle = 0, ;
		Caption = "Display leading <n> characters;       0 = leave as Memo", ;
		Enabled = .F., ;
		Height = 48, ;
		Left = 449, ;
		Name = "Label6", ;
		Top = 168, ;
		Width = 108, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.lblbackcolor' AS label WITH ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "BackColor for selected fields", ;
		Height = 17, ;
		Left = 65, ;
		Name = "lblbackcolor", ;
		Top = 316, ;
		Width = 164
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.lblBackColorRGB' AS label WITH ;
		Anchor = 0, ;
		BackStyle = 0, ;
		Caption = "Label1", ;
		Height = 17, ;
		Left = 250, ;
		Name = "lblBackColorRGB", ;
		Top = 316, ;
		Width = 145
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.lblForeColor' AS label WITH ;
		Anchor = 0, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "ForeColor for selected fields", ;
		Height = 17, ;
		Left = 65, ;
		Name = "lblForeColor", ;
		Top = 352, ;
		Width = 164
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.lblForeColorRGB' AS label WITH ;
		Anchor = 0, ;
		BackStyle = 0, ;
		Caption = "Label1", ;
		Height = 17, ;
		Left = 250, ;
		Name = "lblForeColorRGB", ;
		Top = 352, ;
		Width = 145
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.opgCase' AS optiongroup WITH ;
		Anchor = 0, ;
		BackStyle = 0, ;
		ButtonCount = 4, ;
		ControlSource = "Thisform.nCaseSelection", ;
		Height = 33, ;
		Left = 19, ;
		Name = "opgCase", ;
		Top = 229, ;
		Value = 1, ;
		Width = 540, ;
		Option1.AutoSize = .T., ;
		Option1.BackStyle = 0, ;
		Option1.Caption = "lower case", ;
		Option1.Height = 17, ;
		Option1.Left = 140, ;
		Option1.Name = "Option1", ;
		Option1.TabStop = .F., ;
		Option1.Top = 6, ;
		Option1.Value = 1, ;
		Option1.Width = 78, ;
		Option2.AutoSize = .T., ;
		Option2.BackStyle = 0, ;
		Option2.Caption = "UPPER CASE", ;
		Option2.Height = 17, ;
		Option2.Left = 251, ;
		Option2.Name = "Option2", ;
		Option2.TabStop = .F., ;
		Option2.Top = 6, ;
		Option2.Width = 95, ;
		Option3.AutoSize = .T., ;
		Option3.BackStyle = 0, ;
		Option3.Caption = "Proper Case", ;
		Option3.Height = 17, ;
		Option3.Left = 19, ;
		Option3.Name = "Option3", ;
		Option3.TabStop = .F., ;
		Option3.Top = 6, ;
		Option3.Width = 88, ;
		Option4.AutoSize = .T., ;
		Option4.BackStyle = 0, ;
		Option4.Caption = "Hungarian (cName)", ;
		Option4.Height = 17, ;
		Option4.Left = 379, ;
		Option4.Name = "Option4", ;
		Option4.Top = 6, ;
		Option4.Width = 127
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Spinner1' AS spinner WITH ;
		Height = 24, ;
		KeyboardHighValue = 12, ;
		KeyboardLowValue = 7, ;
		Left = 159, ;
		Name = "Spinner1", ;
		SpinnerHighValue =  12.00, ;
		SpinnerLowValue =   7.00, ;
		Top = 177, ;
		Width = 46
		*< END OBJECT: BaseClass="spinner" />

	ADD OBJECT 'pgfFieldPicker.PageSettings.Spinner2' AS spinner WITH ;
		ControlSource = "Thisform.nMemoFieldWidth", ;
		Height = 24, ;
		KeyboardHighValue = 250, ;
		KeyboardLowValue = 0, ;
		Left = 388, ;
		Name = "Spinner2", ;
		SpinnerHighValue = 250.00, ;
		SpinnerLowValue =   0.00, ;
		Top = 177, ;
		Width = 50
		*< END OBJECT: BaseClass="spinner" />
	
	PROCEDURE Activate
		Local lMarked, ;
		   laMarked[1], ;
		   lcFile As String, ;
		   lnX As Number
		
		This.oBeautifyOptions = Execscript (_Screen.cThorDispatcher, 'Thor_Proc_BeautifyOption', -1)
		* 1 = upper, 2 = lower, 3 = mixed, null = no preference
		This.nbeautifycaseoption = This.oBeautifyOptions[2]
		This.oResultString = null
		
		If not Used(Thisform.calias)
			This.Release()
		EndIf 
		  
		This.pgfFieldPicker.PageSettings.cmdBackColor.Refresh()
		This.pgfFieldPicker.PageSettings.cmdForeColor.Refresh()
		This.pgfFieldPicker.PageSettings.lblBackColorRGB.Refresh()
		This.pgfFieldPicker.PageSettings.lblForeColorRGB.Refresh()
		
		This.Resize()
		
		*!* ******** JRN Removed 2023-06-13 ********
		*!* Do Case
		*!* 	Case Thisform.lSetFocusToGrid = .t. And This.pgfFieldPicker.ActivePage = 2
		*!* 		This.pgfFieldPicker.Page2.grdShowTable.SetFocus()
		*!* 	Case Thisform.lSetFocusToGrid = .f. And This.pgfFieldPicker.ActivePage = 2
		*!* 		Select(this.cAlias)
		*!* 		This.pgfFieldPicker.Page2.txtFilter.SetFocus()
		*!* 	Otherwise 
		*!* 		This.grdPem_fieldpicker.SetFocus()
		*!* Endcase
		
		This.pgfFieldPicker.Page2.txtFilter.SetFocus()
		
	ENDPROC

	PROCEDURE addcustomkeyword
		Lparameters lcKeyword
		
		If This.UseISXOptions()
			_Screen.oISXOptions.oKeywordList.UpdateWord(Alltrim(lcKeyword), .T., .F., .T.)
		EndIf 
	ENDPROC

	PROCEDURE addfieldcursorrecords
		Lparameters lcAlias
		
		Local lMarked, laList[1], laMarked[1], lcFile, lcSafety, lnX
		lcSafety = Set ([Safety])
		Set Safety Off
		
		Select (m.lcAlias)
		Copy To (This.ctempfile) Structure Extended
		AFields(laFields)
		*!* ******************** Removed 2/8/2014 *****************
		
		*!* Dimension m.laList[1]
		*!* Execscript(_Screen.cThorDispatcher, 'THOR_PROC_GetFieldNames', @m.laFields, @m.laList, Thisform.nCaseSelection, m.lcAlias)
		
		Select (Thisform.ccursor)
		This.ZapMe()
		Append From (This.ctempfile)
		
		Scan
			lnRow = Recno()
			*!* ******************** Removed 2/8/2014 ********************
			*!* Replace Field_Name with m.laList[lnRow,1]	
			If This.UseISXOptions()
				Replace Field_Name with Evl(_Screen.oISXoptions.oKeywordlist.FixCase(m.laFields[lnRow,1], .F.), This.ChangeCaseOfFieldName(m.laFields[lnRow,1])) 
			EndIf 
			*!* ******************** End of duplicated text ********************
		EndScan
		
		Replace All fieldtype With field_type + [(]														;
				  + Iif(field_type # 'B',																;
					Transform (field_len) + Iif (field_dec > 0, [,] + Transform (field_dec), []),		;
					Transform (field_dec))																;
				  + [)],																				;
				Record		With  Recno()
		Go Top
		
		Erase (This.ctempfile + [.*])
		If m.lcSafety = [ON]
			Set Safety On
		Endif
		
		Set Order To Record
		
		lcFile	= This.cSavefile
		lMarked	= .F.
		If Adir (laDummy, m.lcFile) > 0
			Select savedata From (m.lcFile) Where Lower(file_name) = Lower(Padr (This.calias, 80)) Into Array laMarked
			Use In (Select(Juststem(m.lcFile)))
			If _Tally > 0
				If Memlines (m.laMarked) > 0
					lMarked = .T.
					For lnX = 1 To Memlines (m.laMarked)
						Replace marked With .T. For field_name = Padr (Mline (m.laMarked, m.lnX), 128) In (Thisform.ccursor)
					Endfor
				Endif
			Endif
		Endif
		If This.lselectallatstartup
			Replace All marked With .T. In (Thisform.ccursor)
			lMarked = .T.
		Endif
		If m.lMarked
			Go Top In (Thisform.ccursor)
			This.makeresultstring()
		Endif
		
	ENDPROC

	PROCEDURE appendblank
		Local lcAutoInc, lcFields, loRecord
		If Thisform.IsCtrlDown()
			lcFields = Thisform.GetSelectedFieldList()
			If Empty(lcFields)
				Scatter Name loRecord Memo
			Else
				Scatter Name loRecord Memo Fields &lcFields
			Endif
		
			lcAutoInc = Set('AutoIncError')
			Set Autoincerror Off
		
			Append Blank In (Thisform.cAlias)
			Gather Name loRecord Memo
		
			Set Autoincerror &lcAutoInc
		Else
			Append Blank In (Thisform.cAlias)
		Endif
		
		
	ENDPROC

	PROCEDURE browsegridheaderclick
		Local laEvents[1], loColumn, loThis
		
		= Aevents (laEvents, 0)
		loThis	 = laEvents[1]
		loColumn = loThis.Parent
		
		Goto (loColumn.FieldNumber) in (thisform.ccursor)
		This.ShiftMarked()
		
	ENDPROC

	PROCEDURE browsegridheadermoved
		Local laEvents[1], loThis
		
		= Aevents (laEvents, 0)
		loThis	 = m.laEvents[1]
		
		Goto (m.loThis.FieldNumber) In (Thisform.cCursor)
		*!* ******** JRN Removed 2023-10-10 ********
		*!* This.shiftmarked()
		
	ENDPROC

	PROCEDURE browsegridheaderrightclick
		Local laEvents[1], laTags[1], lcCurrentOrder, lcDescending, lcField, lcIndexFile, lcOrder, lnI
		Local lnTags, loColumn, loThis
		
		= Aevents (laEvents, 0)
		loThis	 = m.laEvents[1]
		loColumn = m.loThis.Parent
		
		lcField = m.loColumn.FieldName
		Select (This.cAlias)
		
		*** JRN 2021-05-18 : Memo fields and fields that are too long
		Do Case
			Case 'C' = Vartype(&lcField)
				lcField = 'Padr(' + lcField + ', 60)'
			*** JRN 2022-10-19 : Logical fields show .T. first
			Case 'L' = Vartype(&lcField)
				lcField = '.NOT.' + lcField && this curiousity so that you can also sort descending
			*** JRN 2022-11-13 : sort date and datetime descending
			Case 'D' = Vartype(&lcField)
				lcField = 'Date(2050,11,4)-Evl(' + lcField + ',Date(1970,1,1))'
			Case 'T' = Vartype(&lcField)
				lcField = 'DateTime(2050,11,4)-Evl(' + lcField + ',DateTime(1970,1,1))' 
		Endcase
		lcCurrentOrder = Upper(Order())
		lnTags		   = Ataginfo(laTags)
		
		For lnI = 1 To lnTags
			If Upper(Trim(laTags[lnI, 3])) == Upper(Trim(lcField))
				lcOrder = laTags[lnI, 1]
				Do Case
					Case Not Upper(lcOrder) == lcCurrentOrder
						Set Order To &lcOrder
					Case Descending()
						Set Order To &lcOrder Ascending
					Otherwise
						Set Order To &lcOrder Descending
				EndCase
				Goto Top 
				This.Refresh()
				Return
			Endif
		Endfor
		
		lcIndexFile = Sys(2023) + '\_SB_Temp' + Sys(2015)
		Index On &lcField To (lcIndexFile)
		This.Refresh()
		
		
	ENDPROC

	PROCEDURE browsegridrightclick
		Local lcAlias
		
		lcAlias = Alias()
		If Recno(m.lcAlias) = 0
			Return
		Endif
		
		Execscript (_Screen.cThorDispatcher, 'SuperBrowseContextMenu_' + m.lcAlias)
		
	ENDPROC

	PROCEDURE changeallmarked
		Lparameters llNewValue, llToggle
		
		Local lcOrder, lnSelect
		Thisform.LockScreen = .T.
		
		lnSelect = Select()
		Select (Thisform.cCursor)
		lcOrder = Order()
		Set Order To
		
		Replace All Marked With Iif(llToggle, ! Marked, llNewValue)
		Set Order To &lcOrder
		Goto Top
		
		Select (m.lnSelect)
		This.grdPem_fieldpicker.AfterRowColChange()
		Thisform.LockScreen = .F.
		
	ENDPROC

	PROCEDURE changebackcolor
		Local lnColor As Number
		lnColor = Getcolor(Thisform.nselectedbackcolor)
		If lnColor > -1 And lnColor # Thisform.nselectedbackcolor
		   Thisform.nselectedbackcolor = lnColor
		   Thisform.pgfFieldPicker.PageSettings.cmdBackColor.BackColor = Thisform.nselectedbackcolor
		   thisform.pgfFieldPicker.page2.grdShowTable.Refresh()
		   thisform.pgfFieldPicker.PageSettings.lblBackColorRGB.Refresh()
		   Thisform.grdPem_fieldpicker.Init()
		Endif
		Thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE changecase
		Lparameters tcType
		Local lnrecord, lnMarked
		lnrecord = Recno()
		#Define crlf Chr(13)+Chr(10)
		#Define cmdchangetext 'C\<hange Case'
		Select (Thisform.ccursor)
		Replace all field_name with this.changecaseoffieldname (field_name)
		Thisform.Goto(lnrecord)
		this.makeresultstring()
		this.grdPem_fieldpicker.Refresh()
		this.grdPem_fieldpicker.SetFocus()
		
	ENDPROC

	PROCEDURE changecaseoffieldname
		Lparameters tcText
		
		Local lcText
		Do Case
			Case Thisform.nCaseSelection = 1
				lcText = Lower (tcText)
			Case Thisform.nCaseSelection = 2
				lcText = Upper (tcText)
			Case Thisform.nCaseSelection = 3
				lcText = Proper (tcText)
			Otherwise
				lcText = Lower (Left (tcText, 1)) + Proper (Substr (tcText, 2))
		Endcase
		
		Return lcText
	ENDPROC

	PROCEDURE changecaseofstring
		Lparameters tcText, tlFieldName
		
		Local lcText
		Do Case
			Case Isnull (This.nbeautifycaseoption)
				lcText = This.changecaseoffieldname (tcText)
			Case Thisform.nbeautifycaseoption = 1
				lcText = Lower (tcText)
			Case Thisform.nbeautifycaseoption = 2
				lcText = Upper (tcText)
			Otherwise
				lcText = Proper (tcText)
		Endcase
		
		Return lcText
	ENDPROC

	PROCEDURE changeforecolor
		Local lnColor As Number
		lnColor = Getcolor(Thisform.nselectedforecolor)
		If lnColor > -1 And lnColor # Thisform.nselectedforecolor
		   Thisform.nselectedforecolor = lnColor
		   Thisform.pgfFieldPicker.PageSettings.cmdforeColor.BackColor = Thisform.nselectedforecolor
		   thisform.pgfFieldPicker.page2.grdShowTable.Refresh()
		   thisform.pgfFieldPicker.PageSettings.lblForeColorRGB.Refresh()
		   Thisform.grdPem_fieldpicker.Init()
		Endif
		Thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE changeformbackcolor
		Local lnColor As Number
		lnColor = Getcolor(Thisform.nNonDefaultBackColor)
		If lnColor > -1 And lnColor # Thisform.nNonDefaultBackColor
			Thisform.nNonDefaultBackColor = lnColor
			Thisform.SetFormBackColor()
		Endif
		Thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE closecursor
		Lparameters lcAlias
		
		If Upper(m.lcAlias) == Upper(Alias()) And Used(This.cAlias)
			Select(This.cAlias)
		Endif
		
		Use In (Select (m.lcAlias)) && Close lcAlias
		
	ENDPROC

	PROCEDURE color2rgb
		Lparameters lnColor
		Local lnBlue As Number, ;
		   lnGreen As Number, ;
		   lnRed As Number
		lnRed = Mod(lnColor, 256)
		lnGreen = Mod(Bitrshift(lnColor, 8), 256)
		lnBlue = Mod(Bitrshift(lnColor, 16), 256)
		Return [RGB(] + Transform(lnRed) + [,] + Transform(lnGreen) + [,] + Transform(lnBlue) + [)]
		
	ENDPROC

	PROCEDURE createaliaslist
		Local laUsed[1], lcFile, lnCount, lnI, lnNext
		
		lnCount = Aused (laUsed)
		Asort (laUsed, 1, -1, 0)
		
		lnNext = 1
		For lnI = 1 To lnCount
			lcFile = Lower (laUsed[lnI, 1])
			If Left(lcFile, 4) # '_sb_' and not lcFile == 'fp_save' 
				Dimension Thisform.Aused (lnNext)		
				If Lower(lcFile) == Lower(this.cAlias)
					lcFile = This.cAlias
				Else
					lcFile = Thisform.changecaseofstring (lcFile)
				EndIf 
				Thisform.Aused (lnNext) = lcFile
				lnNext = lnNext + 1
			Endif
		Endfor
		
	ENDPROC

	PROCEDURE createfieldcursor
		Local lcSafety As String
		Local lcAlias, lcSys2015
		
		lcAlias			 = Alias()
		lcSys2015 = Sys(2015)
		This.ctempfile	 = Sys(2023) + [\PEM_fieldpickertemp] + lcSys2015
		This.ccursor	 = '_sb_' + lcAlias + '_fields' + lcSys2015
		This.ccurfilter	 = '_sb_' + lcAlias + '_filter' + lcSys2015
		This.ccurindex	 = '_sb_' + lcAlias + '_tags' + lcSys2015
		*!* ******************** Removed 6/19/2014 *****************
		*!* This.cfilterprog = [_sb_filter] + lcSys2015 + '.prg'
		
		Create Cursor (Thisform.ccursor)  ;
			(marked l, Record N(3), field_name C(128), field_type C(1), field_len N(3), field_dec N(3), fieldtype C(7), field_null L)
		Index On Upper (Left(field_name,120)) Tag fieldname
		Index On Iif (marked, 'A', 'B') Tag marked
		Index On Icase(Record = 1, '0', Upper(Field_Name) = 'PARTNO', '1', Field_Type $ 'C', '2', Field_Type $ 'M', '3', Field_Type $ 'BIN', '4', Field_Type $ 'D', '5', Field_Type $ 'T', '6', 'Z') + Field_Name Tag fieldtype
		Index On Record Tag Record
		
		
	ENDPROC

	PROCEDURE createindexcursor
		Create Cursor (Thisform.Ccurindex) (Tagname c(10), TagExpr c(100), Tagtype c(9), TagDesc c(8))
	ENDPROC

	PROCEDURE createindextext
		#Define crlf Chr(13) + Chr(10)
		Local laTemp[1], ;
		   lcExpr As String, ;
		   lcSelect As String, ;
		   lnTags As Number, ;
		   lnX As Number
		m.lcSelect = Select()
		Select (Thisform.calias)
		m.lcExpr = []
		m.lnTags = Ataginfo(laTemp)
		If m.lnTags > 0
		   For m.lnX = 1 To m.lnTags
		      m.lcExpr = m.lcExpr + [Index on ] + m.laTemp(m.lnX, 3) + [ tag ] + m.laTemp(m.lnX, 1)
		      If m.laTemp(m.lnX, 2) = [BINARY]
		         m.lcExpr = m.lcExpr + [ binary]
		      Endif
		      If m.laTemp(m.lnX, 5) = [DESCENDING]
		         m.lcExpr = m.lcExpr + [ descending]
		      Endif
		      If m.lnX < m.lnTags
		         m.lcExpr = m.lcExpr + crlf
		      Endif
		   Endfor
		Endif
		Thisform.cindextext = m.lcExpr
		Thisform.pgfFieldPicker.PageIndexes.edtIndex.Value = m.lcExpr
		Select (m.lcSelect)
	ENDPROC

	PROCEDURE csettings_access
		Return [lSelectAllAtStartup, nCaseSelection, lFrom, lCommaFirst, lUseNVL, nReturnType,];
		   + [ nCastType, nSelectedBackColor, nSelectedForeColor, lReadOnly, lhideunselected, lstartwithgrid, ];
		   + [ nDockable, nFontSize, nFilter, nlanguage, lReadOnlyAtStartup, lAutoSaveSelections, lEditFieldNames, ];
		   + [ lNonDefaultBackColor, nNonDefaultBackColor, lSetFocusToGrid, lFilterByValueUsesAnd, nMemoFieldWidth, ] ;
		   + [ nPopupFormEditboxWidth, nPopupFormEditboxHeight, ] ;
		
		
	ENDPROC

	PROCEDURE custombindevents
		Parameters loForm, loColumn, lcControlSource
		
		Execscript (_Screen.cThorDispatcher, 'SuperBrowseBindEvents_' + This.cAlias, m.loForm, m.loColumn, m.lcControlSource)
	ENDPROC

	PROCEDURE deletefile
		Lparameters lcFileToDelete
		Local lcSafety As String
		lcSafety = Set([Safety])
		Set Safety Off
		Try
		   Erase (lcFileToDelete)
		Catch
		Endtry
		If Set([Safety]) = [ON]
		   Set Safety On
		Endif
		
	ENDPROC

	PROCEDURE deselectuninterestingfields
		Lparameters llAllBlank, llSelecting
		
		Local laVisible[255], lnFieldCount, lnI, lnRecNo, lnSelect, loSourceRecord[1], loThisRecord[1]
		Thisform.LockScreen = .T.
		
		lnSelect = Select()
		
		* --------------------------------------------------------------------------------
		* get sample record to compare to
		Select (This.cAlias)
		lnRecNo = Recno()
		
		If m.llAllBlank
			Scatter To m.loSourceRecord Blank Memo
		Else
			Scatter To m.loSourceRecord Memo
		Endif
		lnFieldCount = Alen(m.loSourceRecord)
		
		* -------------------------------------------------------------------------------- 
		* Loop throuh all records, all fields
		Scan
			Scatter To m.loThisRecord Memo
			For lnI = 1 To m.lnFieldCount
				If (Not m.laVisible[m.lni]) .And. m.loSourceRecord[m.lnI] # m.loThisRecord[m.lnI]
					laVisible[m.lnI] = .T.
				Endif
			Endfor
		Endscan
		
		If Between(m.lnRecNo, 1, Reccount())
			Goto (m.lnRecNo)
		Endif
		
		Select(Thisform.cCursor)
		Scan
			Do Case
				Case m.llSelecting = .T. and Marked = .F. and m.laVisible[Record] = .T.
					Replace Marked With .T. 
				Case m.llSelecting = .F. and Marked = .T. and m.laVisible[Record] = .F.
					Replace Marked With .F.
			Endcase
		Endscan
		Goto Top
		
		Thisform.lneedrefresh = .T.
		Thisform.Refresh()
		
		Select (m.lnSelect)
		Thisform.LockScreen = .F.
		
	ENDPROC

	PROCEDURE Destroy
		If thisform.lAutoSaveSelections 
			Thisform.savedata(.T.)
		EndIf 
		
		If Thisform.nfilter = 1
			Thisform.cfilter = ''
		Endif
		
		Thisform.nDockable = Thisform.Dockable
		Thisform.SaveSettings()
		Thisform.oSettings.Save(Thisform)
		
		This.CloseCursor(Thisform.ccursor)
		This.CloseCursor(Thisform.ccurfilter)
		This.CloseCursor(Thisform.ccurindex)
		If This.lCloseAfter 
			Use In (Select (This.cAlias))
		EndIf 
		
		Thisform.oSettings	   = Null
		Thisform.ogrdshowtable = Null
		Thisform.oResultString = Null
		
	ENDPROC

	PROCEDURE dockable_assign
		lparameters tDockable
		This.Dockable = tDockable
		
	ENDPROC

	PROCEDURE editsinglerecord
		#Define 	ccXTool  'Super Browse'
		#Define		ccXKey	 'Use Dynamic Form'
		
		Lparameters llForceIt
		Local laEvents[1], lcAlias, lcFieldList, lcSave, lcTitle, lcWindow, lnUseDynamicForm, loException
		Local loForm, loObject
		
		Nodefault
		lcTitle			 = [Edit record in ] + Proper(Thisform.cAlias)
		lnUseDynamicForm = Execscript(_Screen.cThorDispatcher, 'Get Option=', ccXKey, ccXTool)
		lcAlias			 = Thisform.cAlias
		
		If Nvl(m.lnUseDynamicForm, 2) = 2 && Added 2012-12-31 Dynamic Forms support By Matt Slay.
			loForm							   = This.GetDynamicForm()
			loForm.oRenderEngine.nColumnHeight = _Screen.Height - Sysmetric(9) - 100
		
			With m.loForm
				.Caption	 = m.lcTitle
				.cAlias		 = m.lcAlias
				.MinHeight	 = 150
				.BorderStyle = 3
		
				With .oRenderEngine
					.nVerticalSpacing = -1
					.nTextBoxWidth	  = 400
					.nEditBoxWidth	  = 400
					.cTextBoxClass	  = 'FP_Textbox'
					.cTextboxClassLib = Thisform.ClassLibrary
		
					.nPopupFormEditboxWidth	 = Thisform.nPopupFormEditboxWidth
					.nPopupFormEditboxHeight = Thisform.nPopupFormEditboxHeight
				Endwith
			Endwith && loForm
		
			Private poData
			Scatter Name m.poData Memo
		
			Aevents(laEvents, 0)
			loObject = m.laEvents[1]
			If Vartype(m.loObject) = 'O' And Pemstatus(m.loObject.Parent, 'Ismemo', 5) And m.loObject.Parent.IsMemo
				Text To m.lcFieldList Noshow Textmerge
				podata.<<m.loObject.Parent.FieldName>>
				.Width	  = <<Thisform.nPopupFormEditboxWidth>>
				.Height   = <<Thisform.nPopupFormEditboxHeight>>
				Endtext
			Else
				lcFieldList	= Thisform.GetSelectedFieldList('|', .T., .T., 'poData.')
				If Empty(m.lcFieldList)
					loForm.oRenderEngine.cAlias	= m.loForm.cAlias
					lcFieldList					= m.loForm.oRenderEngine.GetBodyMarkupForAll()
				Endif
			Endif
		
			loForm.cBodyMarkup	= m.lcFieldList
			m.loForm.Render()
			If m.loForm.oRenderEngine.nColumnCount = 1
				loForm.BorderStyle = 3
				For Each m.loObject In m.loForm.cntMain.Controls FoxObject
					Do Case
						Case Inlist(Lower(m.loObject.BaseClass), 'textbox', 'editbox') And m.loObject.DataType = 'C'
							loObject.Anchor = 10
						Case Lower(m.loObject.BaseClass) = 'commandbutton' And m.loObject.Caption == '...'
							loObject.Anchor = 8
						Otherwise
					Endcase
				Endfor
			Else
				loForm.BorderStyle = 2
			Endif
		
			If Thisform.lReadOnly or This.lHandleDblClick = .F.
				For Each m.loObject In m.loForm.cntMain.Controls FoxObject
					Do Case
						Case Lower(m.loObject.BaseClass) # 'commandbutton'
		
						Case m.loObject.Caption == '...'
		
						Case m.loObject.Caption == 'Cancel'
		
						Otherwise
							loObject.Enabled = .F.
					Endcase
				Endfor
			Endif
		
			m.loForm.Show(1, Thisform)
		
			If Vartype(m.loForm) = 'O' And m.loForm.lSaveClicked = .T.
				lcSave = Set('AutoIncError')
				Set Autoincerror Off
				Try
					Gather Name m.poData Memo
				Catch To m.loException
					Messagebox(m.loException.Message, 16)
				Endtry
				Set Autoincerror &lcSave
			Endif
		
		
		Else
			lcFieldList	= Thisform.GetSelectedFieldList()
			lcWindow	= Thisform.Name
			If Empty(m.lcFieldList)
				Edit Next 1 In Window (m.lcWindow)  Title (m.lcTitle)
			Else
				Edit Next 1 Fields &lcFieldList In Window (m.lcWindow) Title (m.lcTitle)
			Endif
		Endif
		
		
	ENDPROC

	PROCEDURE fillindexcursor
		Local laTag[1], ;
		   lcSelect As String, ;
		   lnLen As Number, ;
		   lnX As Number
		m.lcSelect = Select()
		Select (Thisform.calias)
		m.lnLen = Ataginfo(laTag)
		Select (Thisform.cCurIndex)
		This.ZapMe()
		
		If m.lnLen = 0
		   This.pgfFieldPicker.PageIndexes.Enabled = .F.
		Else
		   This.pgfFieldPicker.PageIndexes.Enabled = .T.
		   For m.lnX = 1 To m.lnLen
		      Insert Into (Thisform.cCurIndex) (Tagname, TagExpr, tagtype, tagdesc);
		         Values (Proper(m.laTag(m.lnX, 1)), m.laTag(m.lnX, 3), Proper(m.laTag(m.lnX, 2)), Iif(m.laTag(m.lnX, 5) = [DESCENDING], [Descend.], [Ascend.]))
		   Endfor
		   Go Top
		Endif
		Thisform.pgfFieldPicker.PageIndexes.grdCurindex.Refresh()
		Select (m.lcSelect)
		
		
		
	ENDPROC

	PROCEDURE filterhelptext
		Local lcResult
		
		Text To m.lcResult Textmerge Noshow
		Filter By Expression is for entry of a valid filter expression (SET FILTER TO).
		
		Filter by Value is for entry of text string(s), separated by spaces or commas, to be found in character fields.  
		
		     You may select the fields to be searched (see grid at left), otherwise all character fields are searched.
		     
		     Matching is not case-sensitive.
		     
		     Default case finds records with matches to all text strings.  
		     
		     Using | as a delimiter or as initial character will find records with matches to any text string.
		     
		Regardless of the radio button choice, you can always use one of these prefix values:
		
		     =  Filter by Expression
		                 = Quantity > 0
		     |  Filter by Value using OR
		                 | Active Project  ... finds records matching 'Active' OR 'Project'
		     ^  Filter by Value using AND
		                 ^ Active Project  ... finds records matching 'Active' AND 'Project'
		     $  Find exact matches to the full text string    
		                 $ Active Project  ... finds records matching 'Active Project'
		     
		Endtext
		
		Return m.lcResult
		
	ENDPROC

	PROCEDURE getdynamicform
		Local loForm
		If Thisform.Dockable = 1
			loForm	= Execscript(_Screen.cThorDispatcher, 'Class= DynamicFormDeskTop')
		Else
			loForm	= Execscript(_Screen.cThorDispatcher, 'Class= DynamicForm')
		Endif
		
		Return loForm
	ENDPROC

	PROCEDURE getemptyvalue
		Lparameters tcType
		Local lcReturn As String, ;
		   lcType As String
		lcType = tcType
		Do Case
		   Case Inlist(lcType, [C], [Q], [M], [W], [V], [G])
		      lcReturn = [""]
		   Case Inlist(lcType, [Y], [N], [I], [B], [F])
		      lcReturn = [0]
		   Case Inlist(lcType, [L])
		      lcReturn = [.F.]
		   Case Inlist(lcType, [D])
		      lcReturn = [{}]
		   Case Inlist(lcType, [T])
		      lcReturn = [{-:}]
		Endcase
		Return lcReturn
		
	ENDPROC

	PROCEDURE getfilterforallcharacterfields
		Lparameters llSelectAll
		
		#Define Tab Chr[9]
		#Define crlf Chr(13)+Chr(10)
		#Define illegalchar Chr(255)
		
		Local laFieldsList[1], lcFieldName, lcFilter, lnSelect, lnX
		
		lnSelect = Select()
		Select (Thisform.cCursor)
		
		Select  Field_Name, Field_Null		;
			From (Thisform.cCursor)			;
			Where Field_Type $ 'CMV'		;
				And (Marked					;
				  Or m.llSelectAll)			;
			Into Array laFieldsList
		
		Select(m.lnSelect)
		
		lcFilter = ''
		If _Tally # 0
			For lnX = 1 To _Tally
				lcFieldName	= Alltrim(m.laFieldsList[m.lnX, 1])
				lcFilter	= m.lcFilter + Iif(m.lnX = 1, '', [+]) + Iif(m.laFieldsList[m.lnX, 2], 'NVL(' + m.lcFieldName + ',[])', m.lcFieldName)
			Endfor
		Endif
		
		Return m.lcFilter
		
	ENDPROC

	PROCEDURE getselectedfieldlist
		Lparameters tcDelimiter, tlPreserveOrder, tlThorPlugIn, lcPrefix
		
		Local lcAlias, lcExtra, lcFieldList, lcLastFieldType, llNoneMarked, llThorPlugIn, lnRecNo, lnSelect
		
		lcAlias			= Thisform.cAlias
		lcFieldList		= []
		lcLastFieldType	= '?'
		
		* see if we even have a plugin
		If m.tlThorPlugIn
			llThorPlugIn = Not Isnull(Execscript(_Screen.cThorDispatcher, 'Thor_Proc_SuperBrowseEditOneRecord', Thisform.cAlias, 'I', 'ID', m.lcLastFieldType))
		Else
			llThorPlugIn = .F.
		Endif
		
		If Thisform.lHideUnselected Or m.tlPreserveOrder
			Thisform.LockScreen	= .T.
			lnSelect			= Select()
			Select (Thisform.cCursor)
			lnRecNo = Recno()
		
			Locate For Marked
			llNoneMarked = Found() = .F.
			Scan For Marked Or m.llNoneMarked
				If m.llThorPlugIn
					lcExtra		= Execscript(_Screen.cThorDispatcher, 'Thor_Proc_SuperBrowseEditOneRecord', Thisform.cAlias, FieldType, Field_Name, m.lcLastFieldType)
					If Not Isnull(m.lcExtra)
						lcFieldList		= m.lcFieldList + Iif(Empty(m.lcFieldList), [], Evl(m.tcDelimiter, [,])) + Evl(lcPrefix, '') + Alltrim(Field_Name)
						lcFieldList		= m.lcFieldList + Nvl(m.lcExtra, '')
						If FieldType = 'M'
							lcfieldlist = lcfieldlist + " .Enabled = .F. .Class = 'DF_MemoFieldEditBox' .CLassLib = ''" 
						EndIf 
						lcLastFieldType	= FieldType
					Endif
				Else
					lcFieldList = m.lcFieldList + Iif(Empty(m.lcFieldList), [], Evl(m.tcDelimiter, [,])) + Alltrim(Field_Name)
				Endif
			Endscan
		
			Thisform.Goto(m.lnRecNo)
			Select (m.lnSelect)
			Thisform.LockScreen = .F.
		Endif
		Select (m.lcAlias)
		
		Return m.lcFieldList
	ENDPROC

	PROCEDURE goto
		Lparameters lnRecNo
		
		Try
			Goto (lnRecNo)
		Catch
		Endtry
		
	ENDPROC

	PROCEDURE gridpick_after
		Lparameters nColIndex
		*!* * Removed 12/28/2012 / JRN
		*!* If Evaluate(thisform.ccursor + '.marked')
		*!*    thisform.cmdselect.Caption = [Un\<select]
		*!* Else
		*!*    thisform.cmdselect.Caption = [\<Select]
		*!* Endif
		Thisform.makeresultstring()
	ENDPROC

	PROCEDURE gridpick_before
		LPARAMETERS nColIndex
		If thisform.lneedrefresh
		   thisform.Refresh()
		   thisform.lneedrefresh = .F.
		Endif
		
	ENDPROC

	PROCEDURE gridpick_click
		Lparameters llNoToggle
		
		Thisform.shiftmarked(.F., llNoToggle)
		Thisform.lneedrefresh = .T.
		Thisform.Refresh()
	ENDPROC

	PROCEDURE gridpick_init
		With Thisform.grdPem_fieldpicker as grid
		   .RecordSource = thisform.ccursor 
		   .SetAll([dynamicforecolor], [iif(Evaluate(thisform.ccursor + '.marked'),thisform.nselectedforecolor,0)], [column])
		   .SetAll([dynamicbackcolor], [iif(Evaluate(thisform.ccursor + '.marked'),thisform.nselectedbackcolor,Rgb(255,255,255))], [column])
		Endwith && Thisform.grdPem_fieldpicker as grid
		
	ENDPROC

	PROCEDURE gridpick_keypress
		Lparameters nKeyCode, nShiftAltCtrl
		Local lcKey As String
		Local llMakestring As Boolean
		Local llFormRefresh As Boolean
		If nKeyCode > 0
		   lcKey = Upper(Chr(nKeyCode))
		Else
		   lcKey = []
		Endif
		llMakestring = .F.
		llFormRefresh = .T.
		Do Case
		   Case Inlist(nKeyCode, 13, 27) && Esc, Enter
		      Thisform.Release()
		   Case nKeyCode = 32 && Space
		      Thisform.shiftmarked()
		   Case Inlist(nKeyCode, 19, 4) && Left, Right
		      Nodefault
		   Case lcKey = [:]
		      Thisform.pgfFieldPicker.page1.txtCursor.SetFocus()
		   Case nShiftAltCtrl = 0
		      Do Case
		         Case lcKey = [A]
		            Thisform.selectall()
		         Case lcKey = [B]
		            _Cliptext = Thisform.creturn
		         Case lcKey = [C]
		            Thisform.nReturnType = 5
		            llMakestring = .T.
		         Case lcKey = [D]
		            Thisform.pgfFieldPicker.page1.txtprefix.SetFocus()
		         Case lcKey = [E]
		            Thisform.nReturnType = 2
		            llMakestring = .T.
		         Case lcKey = [F]
		            Thisform.lFrom = !Thisform.lFrom
		            llMakestring = .T.
		         Case lcKey = [G]
		            Thisform.pgfFieldPicker.ActivePage = 1
		            Thisform.pgfFieldPicker.page2.grdShowTable.SetFocus()
		         Case lcKey = [H]
		            Thisform.lhideunselected = !Thisform.lhideunselected
		         Case lcKey = [I]
		            Thisform.nReturnType = 4
		            llMakestring = .T.
		         Case lcKey = [K]
		            Thisform.pgfFieldPicker.ActivePage = 2
		            This.grdPem_fieldpicker.SetFocus()
		         Case lcKey = [L]
		            Thisform.lUseNVL  = !Thisform.lUseNVL
		            llMakestring = .T.
		         Case lcKey = [M]
		            Thisform.pgfFieldPicker.page1.cmdRemovePrefix.Click()
		         Case lcKey = [N]
		            Thisform.ncasttype = 3
		            llMakestring = .T.
		         Case lcKey = [O]
		            Thisform.savedata()
		         Case lcKey = [P]
		            Thisform.nReturnType = 3
		            llMakestring = .T.
		         Case lcKey = [R]
		            Thisform.togglemarked()
		         Case lcKey = [S]
		            Thisform.shiftmarked()
		         Case lcKey = [T]
		            Thisform.ncasttype = 1
		            llMakestring = .T.
		         Case lcKey = [U]
		            Thisform.unselectall()
		         Case lcKey = [V]
		            Thisform.ncasttype = 2
		            llMakestring = .T.
		         Case lcKey = [W]
		            Thisform.nReturnType = 6
		            llMakestring = .T.
		         Case lcKey = [X]
		            Thisform.cprefix = Thisform.calias
		         Case lcKey = [Y]
		            Thisform.nReturnType = 1
		            llMakestring = .T.
		         Case lcKey = [1]
		            Thisform.ncursor = 1
		            llMakestring = .T.
		         Case lcKey = [2]
		            Thisform.ncursor = 2
		            llMakestring = .T.
		         Case lcKey = [:]
		            Thisform.pgfFieldPicker.page1.txtCursor.SetFocus()
		         Otherwise
		            llFormRefresh = .F.
		      Endcase
		Endcase
		If llFormRefresh
		   thisform.Refresh()
		Endif
		If llMakestring
		   Thisform.makeresultstring()
		Endif
		
	ENDPROC

	PROCEDURE gridtags_init
	ENDPROC

	PROCEDURE Init
		#Define ccSettingsFileName  [PEME_Snippet_FP.Settings]
		Lparameters tcAlias, tcTarget, tcPrefix
		
		Local loSettings As Object
		
		This.MinWidth  = This.Width
		This.MinHeight = This.Height
		This.cAlias	   = Evl(m.tcAlias, Alias())
		This.Caption   = This.cAlias
		If Pcount() = 3
			This.cprefix = Alltrim (m.tcPrefix)
		Endif
		
		If Pcount() > 1
			This.ctarget = Alltrim (m.tcTarget)
			Thisform.RestoreSettings (ccSettingsFileName)
		Else
			Thisform.RestoreSettings (ccSettingsFileName, [ctarget])
		Endif
		This.cVersion = [1.5.0]
		This.cURL  = [https://github.com/VFPX/Thor/blob/master/Docs/Thor_superbrowse.md]
		This.lblVersion.Caption = [Super Browse ] + This.cVersion + [ (Tore Bleken)]
		
		Execscript (_Screen.cThorDispatcher, 'Thor_Proc_GetISXOptions')
		
		Thisform.SetAlias (This.cAlias)
		
		*	This.Caption = This.cAlias
		Select (Thisform.cCursor)
		
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE isctrldown
		* Left SHIFT key
		#define VK_LSHIFT (0xA0)
		
		* Right SHIFT key
		#define VK_RSHIFT (0xA1)
		
		* Left SHIFT key
		#define VK_LCONTROL (0xA2)
		
		* Right SHIFT key
		#define VK_RCONTROL (0xA3)
		
		
		#define	VK_LSHIFT_DOWN		bittest(GetKeyState(VK_LSHIFT), 31)
		#define	VK_RSHIFT_DOWN		bittest(GetKeyState(VK_RSHIFT), 31)
		
		#define	VK_LCONTROL_DOWN		bittest(GetKeyState(VK_LCONTROL), 31)
		#define	VK_RCONTROL_DOWN		bittest(GetKeyState(VK_RCONTROL), 31)
		
		Declare short GetKeyState In User32 Integer vKey
		
		Return VK_LCONTROL_DOWN or VK_RCONTROL_DOWN
		
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		Do Case 
		   Case nKeyCode=27
		      this.creturn=''
		      this.Release()
		Endcase
		
	ENDPROC

	PROCEDURE leditfieldnames_assign
		lparameters tlEditFieldNames
		This.lEditFieldNames = tlEditFieldNames
		This.grdPem_fieldpicker.AllowCellSelection = tlEditFieldNames
		
	ENDPROC

	PROCEDURE Load
		Local loException
		Thisform.createfieldcursor()
		Thisform.createindexcursor()
		This.cSavefile = Sys(2023) + [\FP_save.dbf]
		
		If File(This.cSavefile)
			Try
				Use (This.cSavefile) In 0 Again Shared
			Catch To loException
				Erase (Forceext(This.cSavefile, '*'))
			Endtry
		Endif
		
		Execscript (_Screen.cThorDispatcher, 'Thor_Proc_GetISXOptions') 
	ENDPROC

	PROCEDURE makecaststring
		Lparameters tcFieldname, tcType, tcTypeLength, lcCast1, lcCast2
		Local lcFieldname As String, ;
		   lcType As String, ;
		   lcTypeLength As String
		lcFieldname = tcFieldname
		lcType = tcType
		lcTypeLength = tcTypeLength
		
		Do Case
		   Case Thisform.ncasttype = 1
		      lcCast1 = []
		      lcCast2 = []
		   Case Thisform.ncasttype = 2
		      Do Case
		         Case lcType = [C]
		            lcCast2 = This.changecaseofstring([ As C] + lcTypeLength + [)])
		         Case lcType = [N]
		            lcCast2 = This.changecaseofstring([ As N] + lcTypeLength + [)])
		         Case lcType = [I]
		            lcCast2 = This.changecaseofstring([ As I)])
		         Case lcType = [L]
		            lcCast2 = This.changecaseofstring([ As L)])
		         Case lcType = [W]
		            lcCast2 = This.changecaseofstring([ As W)])
		         Case lcType = [Q]
		            lcCast2 = This.changecaseofstring([ As Q] + lcTypeLength + [)])
		         Case lcType = [V]
		            lcCast2 = This.changecaseofstring([ As V] + lcTypeLength + [)])
		         Case lcType = [D]
		            lcCast2 = This.changecaseofstring([ As D)])
		         Case lcType = [F]
		            lcCast2 = This.changecaseofstring([ As F] + lcTypeLength + [)])
		         Case lcType = [G]
		            lcCast2 = This.changecaseofstring([ As G)])
		         Case lcType = [Y]
		            lcCast2 = This.changecaseofstring([ As Y)])
		         Case lcType = [T]
		            lcCast2 = This.changecaseofstring([ As T)])
		         Case lcType = [B]
		            lcCast2 = This.changecaseofstring([ As B)])
		         Case lcType = [M]
		            lcCast2 = This.changecaseofstring([ As M)])
		      Endcase
		      lcCast1 = This.changecaseofstring([Cast(])
		      lcCast2 = This.changecaseofstring(lcCast2)
		   Case Thisform.ncasttype = 3
		      Do Case
		         Case lcType = [C]
		            lcCast2 = This.changecaseofstring([ As Character] + lcTypeLength + [)])
		         Case lcType = [N]
		            lcCast2 = This.changecaseofstring([ As Numeric] + lcTypeLength + [)]) 
		         Case lcType = [I]
		            lcCast2 = This.changecaseofstring([ As Integer)])
		         Case lcType = [L]
		            lcCast2 = This.changecaseofstring([ As Logical)])
		         Case lcType = [W]
		            lcCast2 = This.changecaseofstring([ As Blob)])
		         Case lcType = [Q]
		            lcCast2 = This.changecaseofstring([ As Varbinary] + lcTypeLength + [)])
		         Case lcType = [V]
		            lcCast2 = This.changecaseofstring([ As Varchar] + lcTypeLength + [)])
		         Case lcType = [D]
		            lcCast2 = This.changecaseofstring([ As Date)])
		         Case lcType = [F]
		            lcCast2 = This.changecaseofstring([ As Float] + lcTypeLength + [)])
		         Case lcType = [G]
		            lcCast2 = This.changecaseofstring([ As General)])
		         Case lcType = [Y]
		            lcCast2 = This.changecaseofstring([ As Currency)])
		         Case lcType = [T]
		            lcCast2 = This.changecaseofstring([ As Datetime)])
		         Case lcType = [B]
		            lcCast2 = This.changecaseofstring([ As Double)])
		         Case lcType = [M]
		            lcCast2 = This.changecaseofstring([ As Memo)])
		      Endcase
		      lcCast1 = This.changecaseofstring([Cast(])
		      lcCast2 = This.changecaseofstring(lcCast2)
		Endcase
		
	ENDPROC

	PROCEDURE makefilter
		Local lcFilter, lcFilterSub2, lnFilterType
		
		Select (Thisform.cAlias)
		lcFilter	 = Alltrim(Thisform.cFilter)
		lcFilterSub2 = Substr(m.lcFilter, 2)
		lnFilterType = Thisform.nfilter
		
		Do Case
		
			Case Empty(m.lcFilter)
				Thisform.SetNormalFilter('')
		
			* ================================================================================
			* Overrides based on first character
			Case m.lcFilter = '='
				Thisform.SetNormalFilter(m.lcFilterSub2)
		
			Case m.lcFilter = '|'
				Thisform.SearchByValue(Chrtran(m.lcFilterSub2, '|', ' '), .F.)
		
			Case m.lcFilter = '^'
				Thisform.SearchByValue(Chrtran(m.lcFilterSub2, '|', '^'), .T.)
		
			Case m.lcFilter = '$'
				Thisform.SearchByValue(m.lcFilterSub2, .T., .T.)
		
			* ================================================================================
			* Using the selected FilterType (from the option group)
			Case m.lnFilterType = 2
				Thisform.SetNormalFilter(m.lcFilter)
		
			* If any of these characters found, assume NOT searching by value, but by expression
			Case Len(m.lcFilter) # Len(Chrtran(m.lcFilter, '=<>$!#*()[]', '')) 
				Thisform.SetNormalFilter(m.lcFilter)
		
			* If 'EMPTY' found, assume NOT searching by value, but by expression
			Case Atc('Empty(', m.lcFilter) # 0
				Thisform.SetNormalFilter(m.lcFilter)
		
			* finally, the default case for search by value.
			Otherwise
				Thisform.SearchByValue(m.lcFilter, .T.)
		
		Endcase
		
	ENDPROC

	PROCEDURE makeresultstring
		#Define Tab Chr[9]
		
		Local lcFieldName, lcFilter, lcKey, lcProp, lcProperties, lcString, lcxString, lnI, lnSelect, lnX
		
		lnSelect = Select()
		Select (Thisform.ccursor)
		
		With This.oResultString
			lcProperties = 'nReturnType, nLanguage, nCaseSelection,	nBeautifyCaseOption, lUseNVL, nCursor, cTarget, cAlias, cPrefix, nCastType, lCommaFirst, lFrom'
			For lnI = 1 To Alines(laProperties, lcProperties, 5, ',')
				lcProp	  = laProperties[lnI]
				.&lcProp. = This.&lcProp.
			Endfor
		
			If 'O' = Vartype(This.oBeautifyOptions)
				.cTabs = Iif (This.oBeautifyOptions[4] = 1, Tab, Space (This.oBeautifyOptions[3]))
			Endif
		
			m.lcKey = Key()
			Select  *,							;
					&lcKey    As  SortKey		;
				From (Thisform.ccursor)			;
				Where marked					;
				Order By SortKey				;
				Into Array .aFieldsList
			.nFieldCount = _Tally
		
			If _Tally > 0
				lcString = .MakeResultString()
			Else
				lcString = ''
			Endif
		
		Endwith
		
		Select(lnSelect)
		
		**************************************************************
		#Define crlf Chr(13)+Chr(10)
		#Define illegalchar Chr(255)
		#Define FieldCountLimit 38 && appears to be the maximum allowed; don't ask for explanation
		
		m.lcfilter = ''
		For m.lnX = 1 To Min(This.oResultString.nFieldCount, FieldCountLimit)
			lcFieldName = Alltrim(This.oResultString.aFieldsList[lnX, 3])
			m.lcFilter = m.lcFilter + [+Trim(] + lcFieldName + [)+'] + illegalchar + [']
		EndFor
		
		This.ltoomanyfilterfields =  This.oResultString.nFieldCount > FieldCountLimit
		
		m.lcFilter			   = 'Upper(' + m.lcFilter + ')'
		Thisform.cfilterfields = m.lcFilter
		*!* ******************** Removed 6/19/2014 *****************
		*!* Thisform.deletefile(Juststem(Thisform.cfilterprog) + [.*])
		*!* *!* ******************** Removed 6/19/2014 *****************
		*!* *!* This.cfilterprog = [_sb_filter] + Sys(2015) + [.prg]
		*!* Strtofile([Return ] + m.lcFilter, Thisform.cfilterprog)
		This.cFilterExpression = m.lcFilter
		*!* * Removed 7/20/2012 / JRN
		*!* _Cliptext = Thisform.cfilterfields
		This.creturn							  = m.lcString
		This.pgfFieldPicker.page1.edtReturn.Value = m.lcString
		This.pgfFieldPicker.page1.edtReturn.Refresh()
		This.pgfFieldPicker.page2.Refresh()
		
	ENDPROC

	PROCEDURE nfontsize_assign
		Lparameters tnfontsize
		
		If This.nfontsize # tnfontsize
			This.nfontsize	= tnfontsize
		
			With This.ogrdshowtable
				.FontSize		 = tnfontsize
				.AutoFit()
			Endwith
		
			With This.grdPem_fieldpicker
				.FontSize		 = tnfontsize
				.AutoFit()
		
				If tnfontsize > 9
					.ScrollBars = 3
				Else
					.ScrollBars = 2
				Endif
			Endwith
		
		Endif
	ENDPROC

	PROCEDURE oresultstring_access
		If Isnull(This.oResultString)
			This.oResultString = Execscript(_Screen.cThorDispatcher, 'Class= ResultString of THOR_PROC_SuperBrowse_ResultString.PRG')
		Endif
		
		Return This.oResultString
		
	ENDPROC

	PROCEDURE pickercontextmenu
		* ContextMenu home page = http://vfpx.codeplex.com/wikipage?title=Thor%20Framework%20ContextMenu
		Local lcKeyWord, lcParameters, loContextMenu
		loContextMenu = Execscript(_Screen.cThorDispatcher, 'Class= ContextMenu')
		
		m.loContextMenu.AddMenuItem('Select all non-empty fields', , , , 'Blank', .T.)
		m.loContextMenu.AddMenuItem('Unselect all empty fields', , , , 'Blank', .F.)
		
		m.loContextMenu.AddMenuItem()
		
		m.loContextMenu.AddMenuItem('Select all non-identical fields', , , , 'Identical', .T.)
		m.loContextMenu.AddMenuItem('Unselect all identical fields', , , , 'Identical', .F.)
		
		m.loContextMenu.AddMenuItem()
		
		m.loContextMenu.AddMenuItem('Hide unselected fields', , , , 'Toggle', , Thisform.lHideUnselected)
		
		If m.loContextMenu.Activate()
			lcKeyWord	 = m.loContextMenu.Keyword
			If m.lcKeyWord = 'Toggle'
				Thisform.lHideUnselected = Not Thisform.lHideUnselected
				With This.pgfFieldPicker.Page2
					.Refresh()
					.grdShowTable.SetFocus()
				Endwith
			Else
				lcParameters = m.loContextMenu.Parameters
				Thisform.DeSelectUninterestingFields(m.lcKeyWord = 'Blank', m.lcParameters)
			Endif
		Endif
		
	ENDPROC

	PROCEDURE picture_access
	ENDPROC

	PROCEDURE QueryUnload
		this.creturn=''
	ENDPROC

	PROCEDURE restoresettings
		Lparameters tcSettingsFileName, tcProperties
		
		loSettings = Execscript (_Screen.cThorDispatcher, [class= ThorFormSettings], tcSettingsFileName)
		Thisform.AddProperty ([oSettings], loSettings)
		loSettings.Restore (Thisform) && Restores .Top, .Left, .Height, .Width
		loSettings.Restore (Thisform, Thisform.cSettings + Evl(tcProperties, []) )
		
		
	ENDPROC

	PROCEDURE savedata
		Lparameters llForceIt
		
		#Define CRLF Chr(13)+Chr(10)
		Local lcFile As String
		Local lcMarked As String
		Local lnX As Number
		Local laMarked[1]
		
		If Used(Thisform.cCursor)
			lcFile = This.cSavefile
			If Adir(laDummy, m.lcFile) = 0
				Create Table (m.lcFile) (File_name c(80), savedata m)
			Endif
		
			lcMarked = []
			Select Field_Name From (Thisform.cCursor) Where Marked Into Array laMarked
		
			For lnX = 1 To _Tally
				lcMarked = m.lcMarked + m.laMarked(m.lnX) + CRLF
			Endfor
			lcMarked = Left(m.lcMarked, Len(m.lcMarked) - 1)
		
			If m.llForceIt Or _Tally > 0
				Update (m.lcFile) Set savedata = m.lcMarked Where Lower(File_name) = Lower(Padr(Thisform.cAlias, 80))
				If _Tally = 0
					Insert Into (m.lcFile) (File_name, savedata) Values (This.cAlias, m.lcMarked)
				Endif
			Endif
		
			Use In (Select(Juststem(m.lcFile)))
		Endif
	ENDPROC

	PROCEDURE savesettings
	ENDPROC

	PROCEDURE searchbyvalue
		Lparameters lcFilter, llAnd, llExact
		
		Local lcFilterExpression, lcNew, lcNewFilter, lcSeparators, lcWord, lnCount[1], lnI, lnWordCount
		
		lcSeparators = Iif(m.llExact, '|', ' ,')
		lnWordCount	 = Getwordcount(m.lcFilter, m.lcSeparators)
		
		lcFilter = Upper(Alltrim(m.lcFilter))
		Set Filter To
		
		Select  Count(*)					;
			From (Thisform.cCursor)			;
			Where Marked					;
				And Field_Type $ 'CMV'		;
			Into Array lnCount
		
		lcFilterExpression = This.GetFilterForAllCharacterFields(m.lnCount = 0)
		
		If Not Empty(m.lcFilterExpression)
			Wait [Searching...] Window Nowait
			lcNewFilter = ''
			For lnI = 1 To m.lnWordCount
				lcWord = Upper(Getwordnum(m.lcFilter, m.lnI, m.lcSeparators))
				Do Case
					Case Not ['] $ m.lcWord
						lcNew = ['] + m.lcWord + [']
					Case Not [''] $ m.lcWord
						lcNew = ["] + m.lcWord + ["]
					Otherwise
						lcNew = '[' + m.lcWord + ']'
				Endcase
				lcNew = 'Atc(' + m.lcNew + ', ' + m.lcFilterExpression + ') # 0'
				If m.lnI = 1
					lcNewFilter = m.lcNew
				Else
					lcNewFilter = m.lcNewFilter + Iif(m.llAnd Or This.lFilterByValueUsesAnd, ' and ', ' or ') + m.lcNew
				Endif
			Endfor
		
			Select (Thisform.cAlias)
			Set Filter To &lcNewFilter
		
			Locate
			Wait Clear
		Else
			Messagebox ([No character fields are selected!])
		Endif
		
		
	ENDPROC

	PROCEDURE selectall
		Thisform.ChangeAllMarked(.T.)
		
	ENDPROC

	PROCEDURE setalias
		Lparameters lcAlias
		
		Local lcDBF, lcFilter, lcRelative, lcSourceName, lnSourceType, loException
		Thisform.lReorderColumns = .T.
		Thisform.pgfFieldPicker.Page2.cboSort.Clear()
		
		lnSourceType = CursorGetProp('SourceType', m.lcAlias)
		lcSourceName = CursorGetProp('SourceName', m.lcAlias)
		Do Case
			Case m.lnSourceType = 1
				This.Caption = 'Local View: ' + m.lcSourceName
		
			Case m.lnSourceType = 2
				This.Caption = 'Remote View: ' + m.lcSourceName
		
			Case m.lnSourceType = 3
				lcDBF	   = Dbf (m.lcAlias)
				*!* ******** JRN Removed 2022-05-20 ********
				*!* lcDBF 	   = Strtran(m.lcDBF, '\\svr-foxpro2016\vfp\', 'Z:\', 1, 1, 1)
				lcRelative = Sys(2014, m.lcDBF)
				If Len (m.lcDBF) < Len (m.lcRelative) Or ':' $ m.lcRelative Or '..\..\..' $ m.lcRelative
					Thisform.Caption = m.lcAlias + ' -- ' + m.lcDBF
				Else
					Thisform.Caption = m.lcAlias + ' -- ' + m.lcRelative
				Endif
				Thisform.Caption = Thisform.Caption + Iif(File(m.lcDBF), ' (' + Ttoc(Fdate(m.lcDBF, 1)) + ')', '')
		Endcase
		
		Thisform.cAlias = m.lcAlias
		Thisform.SetRecordSource (m.lcAlias)
		Thisform.addfieldcursorrecords (m.lcAlias)
		
		Try
			lcFilter = Filter(Thisform.cAlias)
		Catch To m.loException
			lcFilter = ''
		Endtry
		
		Do Case
			Case Empty(m.lcFilter)
		
			Case Thisform.nfilter = 1
				This.cFilter = '=' + m.lcFilter
			Otherwise
				This.cFilter = m.lcFilter
		Endcase
		
	ENDPROC

	PROCEDURE setformbackcolor
		If this.lNonDefaultBackColor
			This.BackColor = this.nNonDefaultBackColor
		Else
			This.ResetToDefault('BackColor')
		EndIf
		
	ENDPROC

	PROCEDURE setnormalfilter
		Lparameters lcFilter
		
		Local llSuccess
		
		Set Relation To
		Try
			Set Filter To &lcFilter
			llSuccess = .T.
		Catch
			llSuccess = .F.
		Endtry
		
		If Not llSuccess
			Messagebox ([Filter failed, try again])
			Return .F.
		Endif
		
		
	ENDPROC

	PROCEDURE setorderfieldname
		If !'DESCENDING'$Set("Order") And Tag() = 'FIELDNAME'
		   Set Order To FIELDNAME Descending In (thisform.ccursor)
		Else    
		   Set Order To FIELDNAME  In (thisform.ccursor)
		Endif 
		thisform.lReorderColumns = .T.
		thisform.grdPem_fieldpicker.Refresh()
		Go Top In (thisform.ccursor)
		thisform.grdPem_fieldpicker.Refresh()
		
	ENDPROC

	PROCEDURE setorderfieldtype
		If !'DESCENDING'$Set("Order") And Tag() = 'FIELDTYPE'
		   Set Order To FIELDTYPE Descending In (thisform.ccursor)
		Else    
		   Set Order To FIELDTYPE In (thisform.ccursor)
		Endif    
		thisform.lReorderColumns = .T.
		thisform.grdPem_fieldpicker.Refresh()
		Go Top In (thisform.ccursor)
		thisform.grdPem_fieldpicker.Refresh()
		
	ENDPROC

	PROCEDURE setordermarked
		thisform.lReorderColumns = .T.
		Set Order To MARKED In (Thisform.ccursor)
		Go Top In (Thisform.ccursor)
		Thisform.grdPem_fieldpicker.Refresh()
	ENDPROC

	PROCEDURE setorderrecord
		If !'DESCENDING'$Set("Order") And Tag() = 'RECORD'
		   Set Order To RECORD Descending In (thisform.ccursor)
		Else    
		   Set Order To Record In (thisform.ccursor)
		Endif    
		thisform.lReorderColumns = .T.
		Go Top In (thisform.ccursor)
		thisform.grdPem_fieldpicker.Refresh()
	ENDPROC

	PROCEDURE setreadonly
		With This.pgfFieldPicker.Page2
			With .grdShowTable
				.ReadOnly			= Thisform.lreadonly
				.AllowCellSelection = .T.
			EndWith 
			.cmdAppend.Refresh()
			.cmdEdit.Refresh()
			.cmdModifyStructure.Refresh()
		Endwith
		
	ENDPROC

	PROCEDURE setrecordsource
		Lparameters tcAlias
		Local laFields[1], lnI, loColumn, loException
		
		Afields(laFields, m.tcAlias)
		
		With This.ogrdshowtable
			.ColumnCount  = -1
			.RecordSource = m.tcAlias
		
			Try
				.AutoFit()
			Catch To m.loException
		
			Endtry
			For lnI = 1 To .ColumnCount
				loColumn = .Columns (m.lnI)
				loColumn.Name = 'Col' + Transform(lnI, '@L 999')
				m.loColumn.AddProperty ('FieldNumber', m.lnI)
				m.loColumn.AddProperty ('FieldName', Trim(Upper(m.laFields[m.lnI, 1])))
				m.loColumn.AddProperty ('IsMemo', m.laFields[m.lnI, 2] = 'M')
				m.loColumn.AddProperty ('cHeaderCaption', Null)
				m.loColumn.AddProperty ('lVisible', Null)
		
				*!* ** { JRN -- 10/26/2020 05:22:32 PM - Begin
				*!* Bindevent(m.loColumn.Header1, 'Click', This, 'BrowseGridHeaderClick')
				*!* Bindevent(m.loColumn.Header1, 'RightClick', This, 'BrowseGridHeaderRightClick')
				Bindevent(m.loColumn.Header1, 'RightClick', This, 'BrowseGridHeaderClick')
				Bindevent(m.loColumn.Header1, 'Click', This, 'BrowseGridHeaderRightClick')
				*!* ** } JRN -- 10/26/2020 05:22:32 PM - End
				Bindevent(m.loColumn.Text1, 'DblClick', Thisform, 'EditSingleRecord')
				Bindevent(m.loColumn.Text1, 'RightClick', Thisform, 'BrowseGridRightClick')
				Bindevent(m.loColumn, 'Moved', This, 'BrowseGridHeaderMoved')
		
				If This.nMemoFieldWidth > 0 And m.loColumn.IsMemo
					loColumn.ControlSource = Textmerge('Padr(<<locolumn.controlsource>>, <<This.nMemoFieldWidth>>)')
					loColumn.Width = 5 * This.nMemoFieldWidth
				Endif
		
				ThisForm.CustomBindEvents(Thisform, m.loColumn, m.loColumn.ControlSource)
		
			EndFor
			.AutoFit()
		Endwith
		
	ENDPROC

	PROCEDURE setsortorder
		Local lcCurIndex, lcTagName
		lcCurIndex = Thisform.Ccurindex
		lcTagName  = &lcCurIndex..Tagname
		Set Order To &lcTagName in (thisform.calias)
	ENDPROC

	PROCEDURE shiftmarked
		Lparameters llnoFocus, llNoToggle
		
		If llNoToggle
		
		Else
			If Evaluate(Thisform.ccursor + '.marked')
				Replace marked With .F. In (Thisform.ccursor)
			Else
				Replace marked With .T. In (Thisform.ccursor)
			Endif
		Endif
		
		This.makeresultstring()
		This.grdPem_fieldpicker.AfterRowColChange()
		If llnoFocus
			Return
		Endif
		This.grdPem_fieldpicker.SetFocus()
		
	ENDPROC

	PROCEDURE Show
		LPARAMETERS nStyle
		
		This.SetFormBackColor()
		*!* ******** JRN Removed 2022-11-15 ********
		*!* this.pgfFieldPicker.ActivePage=This.nStartPage
		
		If Thisform.lReadOnlyAtStartup
			Thisform.lreadonly = .T.
		EndIf 
		
		This.setreadonly()
		
		
	ENDPROC

	PROCEDURE showhelpforsearchbyvalue
		#Define 	ccTool  'Super Browse'
		#Define		ccKey	'Show Filter Help'
		
		Local llShow, loForm
		Private lcHelpText
		
		lcHelpText = ThisForm.FilterHelpText()
		
		* -------------------------------------------------------------------------------- 
		loForm = Thisform.GetDynamicForm()
		
		With m.loForm
			.Caption	 = 'Filter by Expression or Value'
			.MinWidth	 = 550
			.BorderStyle = 3
		Endwith
		
		Text To m.loForm.cBodyMarkup Noshow Textmerge
			lcHelpText	.class 				= 'EditBox'
						.Enabled			= .F.
						.caption 		    = ''
						.Left				= 25
						.Width				= 500
						.BorderStyle		= 0
						.Height				= 350
						.DisabledForeColor  = (Rgb(0,0,0))
						.ScrollBars			= 0
						.Anchor 			= 15
		Endtext
		
		m.loForm.Render()
		
		loForm.cntMain.cmdSAVE.Caption = 'OK'
		loForm.cntMain.cmdSAVE.Left	   = 70
		loForm.cntMain.cmdSAVE.Anchor  = 4
		
		loForm.cntMain.CmdCancel.Visible = .F.
		
		m.loForm.Show(1, Thisform)
		
		
		
	ENDPROC

	PROCEDURE togglemarked
		Thisform.ChangeAllMarked(, .T.)
		
	ENDPROC

	PROCEDURE Unload
		this.deletefile(This.cTempfile + [.*])
		*!* ******************** Removed 6/19/2014 *****************
		*!* this.deletefile(Juststem(this.cfilterprog) + '.*')
		Return This.creturn
		
	ENDPROC

	PROCEDURE unselectall
		Thisform.ChangeAllMarked(.F.)
		
	ENDPROC

	PROCEDURE updateindexpage
		thisform.fillindexcursor()
		thisform.createindextext()
		*!* * Removed 12/29/2012 / JRN
		*!* thisform.cmdcopytoclipboard.Refresh()
		thisform.pgfFieldPicker.PageIndexes.Enabled = !Empty(thisform.pgfFieldPicker.PageIndexes.edtIndex.Value)
		   
	ENDPROC

	PROCEDURE useisxoptions
		Return Pemstatus(_Screen, 'oISXoptions', 5) And Vartype(_Screen.oISXOptions) = 'O'
	ENDPROC

	PROCEDURE zapme
		Local lcSafety
		
		lcSafety = Set ('Safety')
		Set Safety Off
		Set Filter To
		Set Order To
		
		Zap
		
		Set Safety &lcSafety
		
	ENDPROC

	PROCEDURE cboSelectAlias.DropDown
		This.Requery()
		DoDefault()
		
	ENDPROC

	PROCEDURE cboSelectAlias.GotFocus
		Keyboard '{ALT+DNARROW}' plain
	ENDPROC

	PROCEDURE cboSelectAlias.Init
		This.Requery()
		DoDefault()
		
	ENDPROC

	PROCEDURE cboSelectAlias.Refresh
		This.Requery()
		DoDefault()
		
	ENDPROC

	PROCEDURE cboSelectAlias.Requery
		DoDefault()
		Thisform.createaliaslist()
		This.RowSourceType = 5
		This.RowSource = 'Thisform.aUsed'
		This.Value = Thisform.calias
	ENDPROC

	PROCEDURE cboSelectAlias.Valid
		Local lnI, loForm
		
		
		If Lower (This.Value) = Lower (Thisform.calias)
			Return
		Endif
		
		For lnI = 1 To _Screen.FormCount
			loForm = _Screen.Forms[lnI]
			If loForm # Thisform							   ;
					And 'fp_form' == Lower (loForm.Class)	   ;
					And Pemstatus (loForm, 'lSuperBrowse', 5)  ;
					And Lower (loForm.calias) == Lower (This.Value)
				loForm.Show()
				loForm	   = .Null.
				This.Value = Thisform.calias
				Return
			Endif
		Endfor
		
		
		Thisform.SetAlias (This.Value)
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdApply.Click
		Thisform.Release()
	ENDPROC

	PROCEDURE cmdApply.Refresh
		This.Visible = Thisform.WindowType= 1
		this.Enabled= !Empty(thisform.creturn)
	ENDPROC

	PROCEDURE cmddeselectall.Click
		thisform.unselectall()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE cmddeselectall.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE cmdExit.Click
		Thisform.Release()
		
	ENDPROC

	PROCEDURE cmdReverse.Click
		thisform.togglemarked()
	ENDPROC

	PROCEDURE cmdReverse.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE cmdSave.Click
		Thisform.savedata(.T.)
		Messagebox('Field selection is saved',0+64,'',2000)
		Thisform.grdPem_fieldpicker.SetFocus()
		
	ENDPROC

	PROCEDURE cmdSave.Refresh
		Local lEnabled, ;
		   lcExact As String, ;
		   lcLowCaption As String
		lcExact = Set([Exact])
		lEnabled = .F.
		Do Case
		   Case Lower(Thisform.calias) = [curtemp]
		   Case Lower(Thisform.calias) = [curdummy]
		   Otherwise
		      lEnabled = .T.
		Endcase
		This.Enabled = lEnabled
		If lcExact = [ON]
		   Set Exact On
		Endif
	ENDPROC

	PROCEDURE cmdselectall.Click
		thisform.selectall()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE cmdselectall.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE Command2.Click
		Local lnSelect
		
		lnSelect = Select()
		Select(Thisform.cAlias)
		Execscript(_Screen.cThorDispatcher, 'Thor_Tool_Repository_Tableschema', Thisform.cAlias)
		Select(m.lnSelect)
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.AfterRowColChange
		Lparameters  nColIndex
		ThisForm.gridpick_after( nColIndex)
	ENDPROC

	PROCEDURE grdPem_fieldpicker.BeforeRowColChange
		LPARAMETERS nColIndex
		ThisForm.gridpick_before(nColIndex)
		
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Click
		ThisForm.gridpick_click()
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column1.Check1.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column1.Check1.Valid
		ThisForm.gridpick_click(.T.)
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column1.Header1.Click
		ThisForm.setordermarked()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column2.Header1.Click
		ThisForm.setorderrecord()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column2.Text1.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column3.Header1.Click
		ThisForm.setorderfieldname()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column3.Text1.GotFocus
		This.Tag = This.Value
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column3.Text1.LostFocus
		Do Case
			Case Alltrim(This.Value) == Alltrim(This.Tag)
		
			Case Not Upper(Alltrim(This.Value)) == Upper(Alltrim(This.Tag))
				This.Value = This.Tag
		
			Otherwise
				Thisform.AddCustomKeyword(This.Value)
				Thisform.pgfFieldPicker.Refresh()
		
		Endcase
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column3.Text1.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column4.Header1.Click
		ThisForm.setorderfieldtype()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column4.Text1.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column5.Header1.Click
		ThisForm.setorderfieldtype()
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column5.Text1.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column6.Header1.Click
		ThisForm.setorderfieldtype()
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Column6.Text1.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.Init
		ThisForm.gridpick_init()
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.KeyPress
		Lparameters nKeyCode, nShiftAltCtrl
		ThisForm.gridpick_keypress(nKeyCode, nShiftAltCtrl)
		
	ENDPROC

	PROCEDURE grdPem_fieldpicker.RightClick
		Thisform.PickerContextMenu()
		
	ENDPROC

	PROCEDURE lblContextMenuHelp.Refresh
		Local lcAlias, lcFileName
		
		This.Visible = .F.
		
		lcAlias = Thisform.cAlias
		If Used(lcAlias)
			lcFileName = Execscript(_Screen.cThorDispatcher, 'Full Path=SuperBrowseContextMenu_' + m.lcAlias)
			If not Empty(m.lcFileName)
				This.Visible = .T.
			Endif
		Endif
		 
	ENDPROC

	PROCEDURE lblRecountCount.MouseEnter
		Lparameters nButton, nShift, nXCoord, nYCoord
		
		Local lnCount, lnRecNo, lnSelect, loException
		
		Thisform.LockScreen	= .T.
		lnSelect			= Select()
		Select (Thisform.ogrdshowtable.RecordSource)
		lnRecNo = Recno()
		
		Count To m.lnCount
		This.ToolTipText = 'Showing ' + Transform(m.lnCount)
		
		Try
			GoTo (m.lnRecNo)
		Catch To m.loException
		Endtry
		
		Select (m.lnSelect)
		Thisform.LockScreen = .F.
		
	ENDPROC

	PROCEDURE lblRecountCount.Refresh
		If Used(Thisform.cAlias)
			This.Visible = .T.
			This.Caption =  + 'Reccount() = ' + Transform(Reccount(Thisform.cAlias)) + '     Record size = ' + Transform(Recsize(Thisform.cAlias))
		Else
			This.Visible = .F.
		Endif
		
	ENDPROC

	PROCEDURE lblURL.Click
		Local loLink
		m.loLink = Newobject ([_ShellExecute], Home() + [FFC\_Environ.vcx])
		m.loLink.ShellExecute (Thisform.cURL )
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Activate
		This.Refresh()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.chkCloseAfter.Click
		Dodefault()
		thisform.gridpick_after()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.chkCloseAfter.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.chkCloseAfter.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.chkCloseAfter.Refresh
		this.Enabled = Thisform.nReturnType = 2 
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.chkFrom.Click
		Dodefault()
		This.Parent.lblFrom.Refresh()
		This.Parent.txtFrom.Refresh()
		
		thisform.gridpick_after()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.chkFrom.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.chkFrom.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.chkFrom.Refresh
		this.Enabled = Thisform.nReturnType = 2 
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.cmdcopytoclipboard.Click
		If thisform.lAutoSaveSelections 
			Thisform.savedata()
		EndIf 
		
		_cliptext = thisform.creturn 
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.cmdcopytoclipboard.Refresh
		this.Enabled= !Empty(thisform.creturn)
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.cmdFixPrefix.Click
		thisform.cprefix = thisform.calias 
		this.parent.txtprefix.Refresh()
		thisform.gridpick_after()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.cmdFixPrefix.Refresh
		this.Enabled = thisform.nreturntype<=2
		This.Caption  = "= '" + Thisform.calias + "'"
		This.Parent.cmdRemovePrefix.Left = This.Left + This.Width + 14
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.cmdRemovePrefix.Click
		thisform.cprefix = ''
		this.parent.txtprefix.Refresh()
		thisform.gridpick_after()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.cmdRemovePrefix.Refresh
		this.Enabled = thisform.nreturntype<=2
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.chknvl.Click
		Dodefault()
		thisform.gridpick_after()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.chknvl.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.chknvl.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.chknvl.Refresh
		If Thisform.nreturntype = 5
		   This.Caption = [Nu\<llable]
		Else
		   This.Caption = [Add NV\<L()]
		Endif
		This.Enabled = Inlist(Thisform.nreturntype, 1, 2, 5)
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.chknvl.UIEnable
		LPARAMETERS lEnable
		
		If lEnable
			This.Refresh()
		EndIf
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.opgCast.Click
		thisform.makeresultstring()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.opgCast.Refresh
		This.Enabled = Thisform.nreturntype < 3
		This.option1.Enabled = This.Enabled
		This.option2.Enabled = This.Enabled
		This.option3.Enabled = This.Enabled
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.opgCast.UIEnable
		LPARAMETERS lEnable
		
		If lEnable
			This.Refresh()
		EndIf
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.optLanguage.Option1.Click
		Dodefault()
		thisform.Refresh()
		thisform.makeresultstring()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.optLanguage.Option2.Click
		Dodefault()
		thisform.Refresh()
		thisform.makeresultstring()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.optLanguage.Refresh
		 
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.optLanguage.UIEnable
		LPARAMETERS lEnable
		
		If lEnable
			This.Refresh()
		EndIf
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.Container1.Refresh
		Local lnAnchor
		lnAnchor	= This.Anchor
		This.Anchor	= 0
		This.Top	= This.Parent.opgtype.Top + This.Parent.opgtype.Height + 2
		This.Anchor	= m.lnAnchor
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.edtReturn.UIEnable
		LPARAMETERS lEnable
		
		If lEnable and Used(Thisform.calias)
			Thisform.makeresultstring()
		EndIf 	
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.lblFrom.Refresh
		this.Enabled = Thisform.nReturnType = 2 
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.lblInto.Refresh
		If Thisform.nreturntype = 5
		   If Thisform.ncursor > 1
		      This.Caption = [Create Cursor\<:]
		   Else
		      This.Caption = [Create Table\<:]
		   Endif
		Else
		   If Thisform.ncursor > 1
		      This.Caption = [Into Cursor\<:]
		   Else
		      This.Caption = [Into Table\<:]
		   Endif
		Endif
		This.Enabled = Inlist(Thisform.nreturntype, 2, 5)
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.lblLocalAlias.Refresh
		Do Case
			Case Thisform.nreturntype = 1
		      This.Caption = [Prefix\<:]		
			Case Thisform.nreturntype = 2 and thisform.lFrom 
		      This.Caption = [As:]		
			Otherwise
		      This.Caption = [Prefix\<:]		
		EndCase
		
		This.Enabled = Inlist(Thisform.nreturntype, 1, 2)
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgTarget.Option1.Click
		Dodefault()
		thisform.Refresh()
		thisform.makeresultstring()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgTarget.Option1.Refresh
		DoDefault()
		This.Enabled = Inlist (Thisform.nreturntype, 2, 5)
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgTarget.Option2.Click
		Dodefault()
		thisform.Refresh()
		thisform.makeresultstring()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgTarget.Option2.Refresh
		DoDefault()
		This.Enabled = Inlist (Thisform.nreturntype, 2, 5)
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgTarget.Option3.Click
		Dodefault()
		thisform.Refresh()
		thisform.makeresultstring()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgTarget.Option3.Refresh
		DoDefault()
		This.Visible = Inlist (Thisform.nreturntype, 2)
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgtype.Init
		Local laOptions[1], lcExtraOptions, lnCount, lnHeightIncr, lnI, lnLeft, lnTop1, lnTop2
		
		If PemStatus(Thisform.oResultString, 'cExtraOptions', 5) = .F.
			Return
		EndIf 
		
		lcExtraOptions = Thisform.oResultString.cExtraOptions
		If Empty(m.lcExtraOptions)
			Return
		Endif
		
		lnCount = Alines(laOptions, m.lcExtraOptions, 5, '|')
		For lnI = 1 To m.lnCount
			lnLeft		 = This.Buttons[this.ButtonCount].Left
		
			lnTop1		 = This.Buttons[this.ButtonCount].Top
			lnTop2		 = This.Buttons[this.ButtonCount - 1].Top
			lnHeightIncr = m.lnTop1 - m.lnTop2
			This.Height	 = This.Height + m.lnHeightIncr
		
			This.ButtonCount = This.ButtonCount + 1
			With This.Buttons[this.ButtonCount]
				.AutoSize = .T.
				.BackStyle = 0
				.Left	 = m.lnLeft
				.Top	 = m.lnTop1 + m.lnHeightIncr
				.Caption = m.laOptions[m.lnI]
			Endwith
		Endfor
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgtype.InteractiveChange
		this.Click()
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgtype.UIEnable
		LPARAMETERS lEnable
		
		If lEnable
			This.Refresh()
		EndIf
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.opgtype.Valid
		DoDefault()
		thisform.Refresh()
		Thisform.makeresultstring()
		Thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtCursor.InteractiveChange
		thisform.ctarget = this.Value 
		Thisform.makeresultstring()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtCursor.KeyPress
		Lparameters nKeyCode, nShiftAltCtrl
		Local lcChr As String
		If nKeyCode > 0
		   lcChr = Chr(nKeyCode)
		Else
		   lcChr = []
		Endif
		Nodefault
		Do Case
		   Case nKeyCode = 27 Or nKeyCode = 13
		      thisform.grdPem_fieldpicker.SetFocus()
		   *	Case This.SelStart = 0 And (lcChr = [ ] Or !Isalpha(lcChr)) And Between(nKeyCode,25,126)
		   *	Case lcChr $ [ ,;:"'!#%&/()=+?]
		   Otherwise
		      DoDefault(nKeyCode, nShiftAltCtrl)
		Endcase
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtCursor.LostFocus
		Thisform.makeresultstring()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtCursor.Refresh
		this.Enabled = Inlist(Thisform.nReturnType, 2, 5) 
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtFrom.InteractiveChange
		thisform.cprefix = this.Value 
		Thisform.makeresultstring()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtFrom.KeyPress
		Lparameters nKeyCode, nShiftAltCtrl
		Local lcChr As String
		If nKeyCode > 0
		   lcChr = Chr(nKeyCode)
		Else
		   lcChr = []
		Endif
		Nodefault
		Do Case
		   Case nKeyCode = 27 Or nKeyCode = 13
		      thisform.grdPem_fieldpicker.SetFocus()
		   *	Case This.SelStart = 0 And (lcChr = [ ] Or !Isalpha(lcChr)) And Between(nKeyCode,25,126)
		   *	Case lcChr $ [ ,;:"'!#%&/()=+?]
		   Otherwise
		      DoDefault(nKeyCode, nShiftAltCtrl)
		Endcase
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtFrom.LostFocus
		Thisform.makeresultstring()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtFrom.Refresh
		If Thisform.nreturntype = 2 and thisform.lFrom 
			This.Value = Thisform.cAlias
		Else
			This.Value = ''
		Endif
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtPrefix.InteractiveChange
		thisform.cprefix = this.Value 
		Thisform.makeresultstring()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtPrefix.KeyPress
		Lparameters nKeyCode, nShiftAltCtrl
		Local lcChr As String
		If nKeyCode > 0
		   lcChr = Chr(nKeyCode)
		Else
		   lcChr = []
		Endif
		Nodefault
		Do Case
		   Case nKeyCode = 27 Or nKeyCode = 13
		      thisform.grdPem_fieldpicker.SetFocus()
		   *	Case This.SelStart = 0 And (lcChr = [ ] Or !Isalpha(lcChr)) And Between(nKeyCode,25,126)
		   *	Case lcChr $ [ ,;:"'!#%&/()=+?]
		   Otherwise
		      DoDefault(nKeyCode, nShiftAltCtrl)
		Endcase
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtPrefix.LostFocus
		Thisform.makeresultstring()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page1.txtPrefix.Refresh
		this.Enabled = thisform.nreturntype<=2 
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.Activate
		If Used(Thisform.cAlias)
			This.Refresh()
			This.grdShowTable.SetFocus()
		EndIf 
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cboSort.Refresh
		#Define ccNone '<None>'
		Local laTagInfo[1], lcTag, lnI, lnSelect
		
		lnSelect = Select()
		This.Clear()
		
		Select (Thisform.calias)
		
		This.AddItem (ccNone)
		This.List (This.NewItemId, 2) = ''
		For lnI = 1 To Ataginfo (laTagInfo)
			This.AddItem (laTagInfo[lnI, 1])
			This.List (This.NewItemId, 2) = laTagInfo[lnI, 3]
		Endfor
		
		lcTag = Tag()
		If Empty (lcTag)
			This.Value = ccNone
		Else
			This.Value = lcTag
		Endif
		
		Select (lnSelect)
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cboSort.Valid
		Select (Thisform.calias)
		
		If Left(This.Value,1) = '<'
			Set Order to
		Else
			Set Order to (This.Value)
		EndIf
		
		Goto top
		
		Return This.Parent.grdShowTable
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.chkhideunselected.Click
		Dodefault()
		this.Parent.grdShowTable.Refresh()
		This.Parent.grdShowTable.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.chkhideunselected.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.chkreadonly.Click
		DoDefault()
		Thisform.setreadonly()
		This.Parent.grdShowTable.Refresh()
		This.Parent.grdShowTable.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.chkreadonly.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdAppend.Click
		ThisForm.AppendBlank()
		This.Parent.grdShowTable.SetFocus()
		
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdAppend.MouseEnter
		Lparameters nButton, nShift, nXCoord, nYCoord
		
		If Thisform.lhideunselected
			This.ToolTipText = 'Append Blank; Ctrl+Click to append a copy of the selected fields from the current record'
		Else
			This.ToolTipText = 'Append Blank; Ctrl+Click to append a copy of the current record'
		Endif
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdAppend.Refresh
		This.enabled = !thisform.lreadonly
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdBottom.Click
		Go Bottom In (Thisform.calias)
		This.Parent.grdShowTable.Refresh()
		
		
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdEdit.Click
		ThisForm.EditSingleRecord(.T.)
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdEdit.Refresh
		This.enabled = !thisform.lreadonly
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdHelp.Click
		ThisForm.ShowHelpForSearchByValue()
		
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdModifyStructure.Click
		Local lcAlias, lcDBF, llMakeExclusive, lnMsgBoxAns
		lcAlias = Thisform.calias
		
		Select (lcAlias)
		
		llMakeExclusive = Not IsExclusive()
		If llMakeExclusive
			lnMsgBoxAns = Messagebox ('Open exclusively?', 35, 'Open Exclusive', 0)
			Do Case
				Case lnMsgBoxAns = 6
					lcDBF = Dbf()
					Try
						Use (lcDBF) Exclusive Again Alias (lcAlias)
						llMakeExclusive = .T.
					Catch
						Use (lcDBF) Shared Again Alias (lcAlias)
						llMakeExclusive = .F.
						If Messagebox ('Unable to open exclusively.  Continue?', 36, 'Exclusive open failed', 0) = 7
							Return
						Endif
					Endtry
				Case lnMsgBoxAns = 7
					llMakeExclusive = .F.
				Case lnMsgBoxAns = 2
					Return
			Endcase
		Endif
		
		This.Parent.grdShowTable.RecordSource = ''
		Modify Structure
		
		If llMakeExclusive
			Use (lcDBF) Shared Again Alias (lcAlias)
		Endif
		
		ThisForm.SetAlias(lcAlias)
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdModifyStructure.Refresh
		This.enabled = !thisform.lreadonly
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.cmdTop.Click
		Go Top In (Thisform.calias)
		This.Parent.grdShowTable.Refresh()
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.grdShowTable.Init
		Thisform.ogrdshowtable = This
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.grdShowTable.KeyPress
		Lparameters nKeyCode, nShiftAltCtrl
		Local lcKey As String
		If nKeyCode > 0
		   lcKey = Upper(Chr(nKeyCode))
		Else
		   lcKey = []
		EndIf
		Do Case
		   Case Inlist(nKeyCode, 13)
		      Thisform.lneedrefresh = .T.
		      Thisform.grdPem_fieldpicker.Refresh()
		      Thisform.grdPem_fieldpicker.SetFocus()
		   Case lcKey = [F]
		      this.Parent.txtFilter.SetFocus()
		   Case lcKey = [K]
		      Thisform.pgfFieldPicker.ActivePage = 1
		      Thisform.grdPem_fieldpicker.SetFocus()
		   Case lcKey = [R]
		      Nodefault 
		      Thisform.lreadonly = !Thisform.lreadonly
		      Thisform.SetReadonly()
		   Case lcKey = [O]
		      Thisform.savedata()
		   Case lcKey = [H]
		      Thisform.lhideunselected = !Thisform.lhideunselected
		      This.Refresh()
		Endcase
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.grdShowTable.Refresh
		Local lcTalk, lnCounter, lnMarked, lnRecno, lnRecord, lnSelect
		This.ReadOnly		= Thisform.lreadonly
		
		If not Used(Thisform.cAlias)
			Return
		EndIf 
		
		Thisform.LockScreen	= .T.
		lnSelect			= Select()
		
		Select (Thisform.ccursor)
		lnRecno	  = Recno()
		lnCounter = 0
		lcTalk	  = Set ('Talk')
		Set Talk Off
		Calculate Sum(1) To lnMarked For Marked
		Set Talk &lcTalk
		
		Scan
			lnRecord  = Record
			lnCounter = lnCounter + 1
			With This.Columns (lnRecord)
				.BackColor = Icase(Evaluate (Thisform.ccursor + '.marked') and thisform.lHideUnselected = .F., Thisform.nselectedbackcolor, Thisform.lReadOnly, Rgb(208,208,208), Rgb(255, 255, 255))
				.ForeColor = Iif (Evaluate (Thisform.ccursor + '.marked') and thisform.lHideUnselected = .F., Thisform.nselectedforecolor, 0)
				If thisform.lReorderColumns
					.ColumnOrder  = lnCounter
				EndIf 
				.Visible = Nvl(.lVisible, Evaluate (Thisform.ccursor + '.marked') Or lnMarked = 0 Or Not Thisform.lHideUnselected)
				*!* ******************** Removed 12/26/2013 ********************
				*!* .Header1.Caption = Thisform.changecaseoffieldname(.Header1.Caption)
				.Header1.Caption = Nvl(.cHeaderCaption, ' ' + Trim(field_name) + ' ' + Iif(field_type = 'M' and thisform.nMemoFieldWidth > 0, ' (Memo)', ''))
				.Header1.Alignment = IIF(field_type $ 'CM', 0, 1)		
				Do case
					Case field_type = 'L'
						.Alignment = 2
					Case Left(field_type, 1) $ 'CN' and field_len < 7
						.Alignment = 2
				EndCase 
				*!* ******************** End of duplicated text ********************
			Endwith
		Endscan
		
		thisform.lReorderColumns = .F.
		Thisform.Goto (lnRecno)
		Select (lnSelect)
		Thisform.LockScreen = .F.
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.lblFilter.Refresh
		If thisform.nfilter = 1
			This.Caption = 'Find Va\<lues:'
		Else
			This.Caption = 'Fi\<lter:'
		EndIf 
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.opgFilter.Option1.Click
		#Define 	ccTool  'Super Browse'
		#Define		ccKey	'Show Filter Help'
		
		If Not Empty(this.Tag) 
			Execscript(_Screen.cThorDispatcher, 'Set Option=', ccKey, ccTool, .T.)
		EndIf
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.opgFilter.Valid
		This.Parent.Refresh()
		
		Thisform.cFilter = ''
		this.Parent.txtFilter.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.txtFilter.MouseEnter
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		This.ToolTipText = ThisForm.FilterHelpText()
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.txtFilter.Refresh
		#Define illegalchar Chr(255)
		Local lcFilter, loException
		
		If Thisform.nfilter = 1
			This.BackColor = Thisform.Nselectedbackcolor
		Else
			This.BackColor = Rgb(255, 255, 255)
		EndIf
		
		*!* ******************** Removed 09/24/2016 *****************
		*!* Try
		*!* 	lcFilter = Filter(Thisform.cAlias)
		*!* Catch To m.loException
		*!* 	lcFilter = ''
		*!* Endtry
		
		*!* If Empty(m.lcFilter)
		*!* 	Return
		*!* Endif
		
		*!* If Thisform.nfilter = 1
		*!* 	If Not illegalchar $ m.lcFilter
		*!* 		This.Value = '=' + m.lcFilter
		*!* 	Endif
		*!* Else
		*!* 	If illegalchar $ m.lcFilter And Left(Trim(This.Value), 1) # '$' And Not Empty(This.Value)
		*!* 		This.Value = This.Value = This.Value + '$'
		*!* 	Endif
		*!* Endif
		
	ENDPROC

	PROCEDURE pgfFieldPicker.Page2.txtFilter.Valid
		ThisForm.makefilter()
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageIndexes.Activate
		thisform.updateindexpage()
		This.Refresh()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageIndexes.grdCurindex.Init
		This.RecordSource = Thisform.ccurindex 
		
		With This
			For lnI = 1 To .ColumnCount
				loColumn = .Columns (lnI)
		        BindEvent(loColumn.Text1, 'Click', Thisform, 'SetSortOrder')
			Endfor
		Endwith
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Activate
		This.Refresh()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check1.Click
		Dodefault()
		thisform.gridpick_after()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check1.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check1.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check2.Click
		Dodefault()
		thisform.grdPem_fieldpicker.AfterRowColChange()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check2.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check2.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check3.Click
		Dodefault()
		thisform.gridpick_after()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check3.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check3.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check4.Click
		DoDefault()
		This.Parent.cntFormBackColor.Refresh()
		Thisform.SetFormBackColor()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check4.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check4.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check5.Click
		Dodefault()
		thisform.gridpick_after()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check5.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Check5.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.chkComma.Click
		Dodefault()
		thisform.grdPem_fieldpicker.AfterRowColChange()
		thisform.grdPem_fieldpicker.SetFocus()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.chkComma.InteractiveChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.chkComma.ProgrammaticChange
		this.Click()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.cmdBackColor.Click
		ThisForm.changebackcolor()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.cmdBackColor.Refresh
		This.BackColor = Thisform.nselectedbackcolor
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.cmdForeColor.Click
		ThisForm.changeforecolor()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.cmdForeColor.Refresh
		this.BackColor = thisform.nselectedforecolor 
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.cntFormBackColor.Command1.Click
		ThisForm.changeformbackcolor()
		This.Parent.Refresh()
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.cntFormBackColor.Command1.Refresh
		This.BackColor = Thisform.nNonDefaultBackColor 
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.cntFormBackColor.Label5.Refresh
		this.Caption = Thisform.color2rgb(Thisform.nNonDefaultBackColor)
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.cntFormBackColor.Refresh
		This.Visible = Thisform.lNonDefaultBackColor
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Label4.Click
		Local loLink, lcLink 
		lcLink = Thisform.cURL
		loLink = Newobject ('_ShellExecute', Home() + 'FFC\_Environ.vcx')
		loLink.ShellExecute (lcLink)
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.lblBackColorRGB.Refresh
		this.Caption = Thisform.color2rgb(Thisform.nselectedbackcolor)
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.lblForeColorRGB.Refresh
		this.Caption = Thisform.color2rgb(Thisform.nselectedforecolor)
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.opgCase.Valid
		thisform.changecase()
		thisform.makeresultstring()
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Spinner1.InteractiveChange
		Thisform.nfontsize = This.Value
		Thisform.grdPem_fieldpicker.Refresh()
		
	ENDPROC

	PROCEDURE pgfFieldPicker.PageSettings.Spinner1.Refresh
		This.Value = Thisform.nfontsize 
	ENDPROC

ENDDEFINE

DEFINE CLASS fp_textbox AS textbox 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<PropValue>
		Height = 23
		Name = "fp_textbox"
		Width = 100
	*</PropValue>

ENDDEFINE
